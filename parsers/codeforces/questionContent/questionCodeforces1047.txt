G. Cycle Palindrome
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
We say that a sequence of
n
integers
a
1
,
a
2
,…,
a
n
is a palindrome if for all
1≤i≤n
,
a
i
=
a
n−i+1
. You are given a sequence of
n
integers
a
1
,
a
2
,…,
a
n
and you have to find, if it exists, a cycle permutation
σ
so that the sequence
a
σ(1)
,
a
σ(2)
,…,
a
σ(n)
is a palindrome.
A permutation of
1,2,…,n
is a bijective function from
{1,2,…,n}
to
{1,2,…,n}
. We say that a permutation
σ
is a cycle permutation if
1,σ(1),
σ
2
(1),…,
σ
n−1
(1)
are pairwise different numbers. Here
σ
m
(1)
denotes
σ(σ(…σ









m times
(1)…))
.
Input
The input consists of multiple test cases. The first line contains a single integer
t
(
1≤t≤3⋅
10
4
) — the number of test cases. Description of the test cases follows.
The first line of each test case contains an integer
n
(
2≤n≤2⋅
10
5
) — the size of the sequence.
The second line of each test case contains
n
integers
a
1
,…,
a
n
(
1≤
a
i
≤n
).
The sum of
n
for all test cases is at most
2⋅
10
5
.
Output
For each test case, output one line with YES if a cycle permutation exists, otherwise output one line with NO.
If the answer is YES, output one additional line with
n
integers
σ(1),σ(2),…,σ(n)
, the permutation. If there is more than one permutation, you may print any.
Example
input
Copy
3
4
1 2 2 1
3
1 2 1
7
1 3 3 3 1 2 2
output
Copy
YES
3 1 4 2 
NO
YES
5 3 7 2 6 4 1 