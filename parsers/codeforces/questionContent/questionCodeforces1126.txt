H. Minimize Inversions Number
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given a permutation
p
of length
n
.
You can choose any subsequence, remove it from the permutation, and insert it at the beginning of the permutation keeping the same order.
For every
k
from
0
to
n
, find the minimal possible number of inversions in the permutation after you choose a subsequence of length exactly
k
.
Input
The first line contains a single integer
t
(
1≤t≤50000
) — the number of test cases.
The first line of each test case contains one integer
n
(
1≤n≤5⋅
10
5
) — the length of the permutation.
The second line of each test case contains the permutation
p
1
,
p
2
,…,
p
n
(
1≤
p
i
≤n
).
It is guaranteed that the total sum of
n
doesn't exceed
5⋅
10
5
.
Output
For each test case output
n+1
integers. The
i
-th of them must be the answer for the subsequence length of
i−1
.
Example
input
Copy
3
1
1
4
4 2 1 3
5
5 1 3 2 4
output
Copy
0 0
4 2 2 1 4
5 4 2 2 1 5
Note
In the second test case:
For the length
0
:
[4,2,1,3]→[4,2,1,3]
:
4
inversions.
For the length
1
:
[4,2,1,3]→[1,4,2,3]
:
2
inversions.
For the length
2
:
[4,2,1,3]→[2,1,4,3]
, or
[4,2,1,3]→[1,3,4,2]
:
2
inversions.
For the length
3
:
[4,2,1,3]→[2,1,3,4]
:
1
inversion.
For the length
4
:
[4,2,1,3]→[4,2,1,3]
:
4
inversions.