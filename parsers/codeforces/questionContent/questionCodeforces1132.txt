B. MEX and Array
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
Let there be an array
b
1
,
b
2
,…,
b
k
. Let there be a partition of this array into segments
[
l
1
;
r
1
],[
l
2
;
r
2
],…,[
l
c
;
r
c
]
, where
l
1
=1
,
r
c
=k
, and for any
2≤i≤c
holds that
r
i−1
+1=
l
i
. In other words, each element of the array belongs to exactly one segment.
Let's define the cost of a partition as
c+
∑
i=1
c
mex({
b
l
i
,
b
l
i
+1
,…,
b
r
i
}),
c
where
mex
of a set of numbers
S
is the smallest non-negative integer that does not occur in the set
S
. In other words, the cost of a partition is the number of segments plus the sum of MEX over all segments. Let's define the value of an array
b
1
,
b
2
,…,
b
k
as the maximum possible cost over all partitions of this array.
You are given an array
a
of size
n
. Find the sum of values of all its subsegments.
An array
x
is a subsegment of an array
y
if
x
can be obtained from
y
by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.
Input
The input contains several test cases. The first line contains one integer
t
(
1≤t≤30
) — the number of test cases.
The first line for each test case contains one integer
n
(
1≤n≤100
) — the length of the array.
The second line contains a sequence of integers
a
1
,
a
2
,…,
a
n
(
0≤
a
i
≤
10
9
) — the array elements.
It is guaranteed that the sum of the values
n
over all test cases does not exceed
100
.
Output
For each test case print a single integer — the answer to the problem.
Example
input
Copy
4
2
1 2
3
2 0 1
4
2 0 5 1
5
0 1 1 0 1
output
Copy
4
14
26
48
Note
In the second test case:
The best partition for the subsegment
[2,0,1]
:
[2],[0,1]
. The cost of this partition equals to
2+mex({2})+mex({0,1})=2+0+2=4
.
The best partition for the subsegment
[2,0]
:
[2],[0]
. The cost of this partition equals to
2+mex({2})+mex({0})=2+0+1=3
The best partition for the subsegment
[2]
:
[2]
. The cost of this partition equals to
1+mex({2})=1+0=1
.
The best partition for the subsegment
[0,1]
:
[0,1]
. The cost of this partition equals to
1+mex({0,1})=1+2=3
.
The best partition for the subsegment
[0]
:
[0]
. The cost of this partition equals to
1+mex({0})=1+1=2
.
The best partition for the subsegment
[1]
:
[1]
. The cost of this partition equals to
1+mex({1})=1+0=1
.
The sum of values over all subsegments equals to
4+3+1+3+2+1=14
.