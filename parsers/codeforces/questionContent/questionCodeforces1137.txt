C. Differential Sorting
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given an array
a
of
n
elements.
Your can perform the following operation no more than
n
times: Select three indices
x,y,z
(1≤x<y<z≤n)
and replace
a
x
with
a
y
−
a
z
. After the operation,
|
a
x
|
need to be less than
10
18
.
Your goal is to make the resulting array non-decreasing. If there are multiple solutions, you can output any. If it is impossible to achieve, you should report it as well.
Input
Each test contains multiple test cases. The first line will contain a single integer
t
(1≤t≤10000)
— the number of test cases. Then
t
test cases follow.
The first line of each test case contains a single integer
n
(3≤n≤2⋅
10
5
)
— the size of the array
a
.
The second line of each test case contains
n
integers
a
1
,
a
2
,…,
a
n
(−
10
9
≤
a
i
≤
10
9
)
, the elements of
a
.
It is guaranteed that the sum of
n
over all test cases does not exceed
2⋅
10
5
.
Output
For each test case, print
−1
in a single line if there is no solution. Otherwise in the first line you should print a single integer
m
(0≤m≤n)
— number of operations you performed.
Then the
i
-th of the following
m
lines should contain three integers
x,y,z
(1≤x<y<z≤n)
— description of the
i
-th operation.
If there are multiple solutions, you can output any. Note that you don't have to minimize the number of operations in this task.
Example
input
Copy
3
5
5 -4 2 -1 2
3
4 3 2
3
-3 -2 -1
output
Copy
2
1 2 3
3 4 5
-1
0
Note
In the first example, the array becomes
[−6,−4,2,−1,2]
after the first operation,
[−6,−4,−3,−1,2]
after the second operation.
In the second example, it is impossible to make the array sorted after any sequence of operations.
In the third example, the array is already sorted, so we don't need to perform any operations.