C. Set or Decrease
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given an integer array
a
1
,
a
2
,…,
a
n
and integer
k
.
In one step you can
either choose some index
i
and decrease
a
i
by one (make
a
i
=
a
i
−1
);
or choose two indices
i
and
j
and set
a
i
equal to
a
j
(make
a
i
=
a
j
).
What is the minimum number of steps you need to make the sum of array
∑
i=1
n
a
i
≤k
? (You are allowed to make values of array negative).
Input
The first line contains a single integer
t
(
1≤t≤
10
4
) — the number of test cases.
The first line of each test case contains two integers
n
and
k
(
1≤n≤2⋅
10
5
;
1≤k≤
10
15
) — the size of array
a
and upper bound on its sum.
The second line of each test case contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤
10
9
) — the array itself.
It's guaranteed that the sum of
n
over all test cases doesn't exceed
2⋅
10
5
.
Output
For each test case, print one integer — the minimum number of steps to make
∑
i=1
n
a
i
≤k
.
Example
input
Copy
4
1 10
20
2 69
6 9
7 8
1 2 1 3 1 2 1
10 1
1 2 3 1 2 6 1 6 8 10
output
Copy
10
0
2
7
Note
In the first test case, you should decrease
a
1
10
times to get the sum lower or equal to
k=10
.
In the second test case, the sum of array
a
is already less or equal to
69
, so you don't need to change it.
In the third test case, you can, for example:
set
a
4
=
a
3
=1
;
decrease
a
4
by one, and get
a
4
=0
.
As a result, you'll get array
[1,2,1,0,1,2,1]
with sum less or equal to
8
in
1+1=2
steps.
In the fourth test case, you can, for example:
choose
a
7
and decrease in by one
3
times; you'll get
a
7
=−2
;
choose
4
elements
a
6
,
a
8
,
a
9
and
a
10
and them equal to
a
7
=−2
.
As a result, you'll get array
[1,2,3,1,2,−2,−2,−2,−2,−2]
with sum less or equal to
1
in
3+4=7
steps.