G. Weighted Increasing Subsequences
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given the sequence of integers
a
1
,
a
2
,…,
a
n
of length
n
.
The sequence of indices
i
1
<
i
2
<…<
i
k
of length
k
denotes the subsequence
a
i
1
,
a
i
2
,…,
a
i
k
of length
k
of sequence
a
.
The subsequence
a
i
1
,
a
i
2
,…,
a
i
k
of length
k
of sequence
a
is called increasing subsequence if
a
i
j
<
a
i
j+1
for each
1≤j<k
.
The weight of the increasing subsequence
a
i
1
,
a
i
2
,…,
a
i
k
of length
k
of sequence
a
is the number of
1≤j≤k
, such that exists index
i
k
<x≤n
and
a
x
>
a
i
j
.
For example, if
a=[6,4,8,6,5]
, then the sequence of indices
i=[2,4]
denotes increasing subsequence
[4,6]
of sequence
a
. The weight of this increasing subsequence is
1
, because for
j=1
exists
x=5
and
a
5
=5>
a
i
1
=4
, but for
j=2
such
x
doesn't exist.
Find the sum of weights of all increasing subsequences of
a
modulo
10
9
+7
.
Input
The first line contains a single integer
t
(
1≤t≤1000
) — the number of test cases.
The first line of each test case contains the single integer
n
(
1≤n≤2⋅
10
5
) — the length of the sequence
a
.
The second line of each test case contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤
10
9
) — the sequence
a
.
It is guaranteed that the sum of
n
over all test cases doesn't exceed
2⋅
10
5
.
Output
For each test case, print the sum of weights of all increasing subsequences
a
modulo
10
9
+7
.
Example
input
Copy
4
5
6 4 8 6 5
4
1 2 3 4
3
3 2 2
4
4 5 6 5
output
Copy
4
12
0
6
Note
In the first test case the following increasing subsequences of
a
have not zero weight:
The weight of
[
a
1
]=[6]
is
1
.
The weight of
[
a
2
]=[4]
is
1
.
The weight of
[
a
2
,
a
3
]=[4,8]
is
1
.
The weight of
[
a
2
,
a
4
]=[4,6]
is
1
.
The sum of weights of increasing subsequences is
4
.
In the second test case there are
7
increasing subsequences of
a
with not zero weight:
3
with weight
1
,
3
with weight
2
and
1
with weight
3
. The sum of weights is
12
.