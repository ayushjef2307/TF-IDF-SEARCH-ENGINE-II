D. MEX Sequences
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
Let's call a sequence of integers
x
1
,
x
2
,…,
x
k
MEX-correct if for all
i
(
1≤i≤k
)
|
x
i
−MEX(
x
1
,
x
2
,…,
x
i
)|≤1
holds. Where
MEX(
x
1
,…,
x
k
)
is the minimum non-negative integer that doesn't belong to the set
x
1
,…,
x
k
. For example,
MEX(1,0,1,3)=2
and
MEX(2,1,5)=0
.
You are given an array
a
consisting of
n
non-negative integers. Calculate the number of non-empty MEX-correct subsequences of a given array. The number of subsequences can be very large, so print it modulo
998244353
.
Note: a subsequence of an array
a
is a sequence
[
a
i
1
,
a
i
2
,…,
a
i
m
]
meeting the constraints
1≤
i
1
<
i
2
<⋯<
i
m
≤n
. If two different ways to choose the sequence of indices
[
i
1
,
i
2
,…,
i
m
]
yield the same subsequence, the resulting subsequence should be counted twice (i. e. two subsequences are different if their sequences of indices
[
i
1
,
i
2
,…,
i
m
]
are not the same).
Input
The first line contains a single integer
t
(
1≤t≤
10
5
) — the number of test cases.
The first line of each test case contains a single integer
n
(
1≤n≤5⋅
10
5
).
The second line contains
n
integers
a
1
,
a
2
,…,
a
n
(
0≤
a
i
≤n
).
The sum of
n
over all test cases doesn't exceed
5⋅
10
5
.
Output
For each test case, print a single integer — the number of non-empty MEX-correct subsequences of a given array, taken modulo
998244353
.
Example
input
Copy
4
3
0 2 1
2
1 0
5
0 0 0 0 0
4
0 1 2 3
output
Copy
4
2
31
7
Note
In the first example, the valid subsequences are
[0]
,
[1]
,
[0,1]
and
[0,2]
.
In the second example, the valid subsequences are
[0]
and
[1]
.
In the third example, any non-empty subsequence is valid.