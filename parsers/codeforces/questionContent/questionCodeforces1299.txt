A. Anti Light's Cell Guessing
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are playing a game on a
n×m
grid, in which the computer has selected some cell
(x,y)
of the grid, and you have to determine which one.
To do so, you will choose some
k
and some
k
cells
(
x
1
,
y
1
),(
x
2
,
y
2
),…,(
x
k
,
y
k
)
, and give them to the computer. In response, you will get
k
numbers
b
1
,
b
2
,…
b
k
, where
b
i
is the manhattan distance from
(
x
i
,
y
i
)
to the hidden cell
(x,y)
(so you know which distance corresponds to which of
k
input cells).
After receiving these
b
1
,
b
2
,…,
b
k
, you have to be able to determine the hidden cell. What is the smallest
k
for which is it possible to always guess the hidden cell correctly, no matter what cell computer chooses?
As a reminder, the manhattan distance between cells
(
a
1
,
b
1
)
and
(
a
2
,
b
2
)
is equal to
|
a
1
−
a
2
|+|
b
1
−
b
2
|
.
Input
The first line of the input contains a single integer
t
(
1≤t≤
10
4
) — the number of test cases. The description of test cases follows.
The single line of each test case contains two integers
n
and
m
(
1≤n,m≤
10
9
) — the number of rows and the number of columns in the grid.
Output
For each test case print a single integer — the minimum
k
for that test case.
Example
input
Copy
2
2 3
3 1
output
Copy
2
1
Note
In the first test case, the smallest such
k
is
2
, for which you can choose, for example, cells
(1,1)
and
(2,1)
.
Note that you can't choose cells
(1,1)
and
(2,3)
for
k=2
, as both cells
(1,2)
and
(2,1)
would give
b
1
=1,
b
2
=2
, so we wouldn't be able to determine which cell is hidden if computer selects one of those.
In the second test case, you should choose
k=1
, for it you can choose cell
(3,1)
or
(1,1)
.