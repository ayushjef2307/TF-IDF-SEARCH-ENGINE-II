B. Build the Permutation
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given three integers
n,a,b
. Determine if there exists a permutation
p
1
,
p
2
,…,
p
n
of integers from
1
to
n
, such that:
There are exactly
a
integers
i
with
2≤i≤n−1
such that
p
i−1
<
p
i
>
p
i+1
(in other words, there are exactly
a
local maximums).
There are exactly
b
integers
i
with
2≤i≤n−1
such that
p
i−1
>
p
i
<
p
i+1
(in other words, there are exactly
b
local minimums).
If such permutations exist, find any such permutation.
Input
The first line of the input contains a single integer
t
(
1≤t≤
10
4
) — the number of test cases. The description of test cases follows.
The only line of each test case contains three integers
n
,
a
and
b
(
2≤n≤
10
5
,
0≤a,b≤n
).
The sum of
n
over all test cases doesn't exceed
10
5
.
Output
For each test case, if there is no permutation with the requested properties, output
−1
.
Otherwise, print the permutation that you are found. If there are several such permutations, you may print any of them.
Example
input
Copy
3
4 1 1
6 1 2
6 4 0
output
Copy
1 3 2 4
4 2 3 1 5 6
-1
Note
In the first test case, one example of such permutations is
[1,3,2,4]
. In it
p
1
<
p
2
>
p
3
, and
2
is the only such index, and
p
2
>
p
3
<
p
4
, and
3
the only such index.
One can show that there is no such permutation for the third test case.