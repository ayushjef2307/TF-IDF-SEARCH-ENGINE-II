C. Make Them Equal
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
Theofanis has a string
s
1
s
2
…
s
n
and a character
c
. He wants to make all characters of the string equal to
c
using the minimum number of operations.
In one operation he can choose a number
x
(
1≤x≤n
) and for every position
i
, where
i
is not divisible by
x
, replace
s
i
with
c
.
Find the minimum number of operations required to make all the characters equal to
c
and the
x
-s that he should use in his operations.
Input
The first line contains a single integer
t
(
1≤t≤
10
4
) — the number of test cases.
The first line of each test case contains the integer
n
(
3≤n≤3⋅
10
5
) and a lowercase Latin letter
c
 — the length of the string
s
and the character the resulting string should consist of.
The second line of each test case contains a string
s
of lowercase Latin letters — the initial string.
It is guaranteed that the sum of
n
over all test cases does not exceed
3⋅
10
5
.
Output
For each test case, firstly print one integer
m
 — the minimum number of operations required to make all the characters equal to
c
.
Next, print
m
integers
x
1
,
x
2
,…,
x
m
(
1≤
x
j
≤n
) — the
x
-s that should be used in the order they are given.
It can be proved that under given constraints, an answer always exists. If there are multiple answers, print any.
Example
input
Copy
3
4 a
aaaa
4 a
baaa
4 b
bzyx
output
Copy
0
1
2
2 
2 3
Note
Let's describe what happens in the third test case:
x
1
=2
: we choose all positions that are not divisible by
2
and replace them, i. e. bzyx
→
bzbx;
x
2
=3
: we choose all positions that are not divisible by
3
and replace them, i. e. bzbx
→
bbbb.