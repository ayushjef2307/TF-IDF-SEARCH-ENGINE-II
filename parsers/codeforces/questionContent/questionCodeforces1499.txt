E. Non-Decreasing Dilemma
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
Alice has recently received an array
a
1
,
a
2
,…,
a
n
for her birthday! She is very proud of her array, and when she showed her friend Bob the array, he was very happy with her present too!
However, soon Bob became curious, and as any sane friend would do, asked Alice to perform
q
operations of two types on her array:
1
x
y
: update the element
a
x
to
y
(set
a
x
=y
).
2
l
r
: calculate how many non-decreasing subarrays exist within the subarray
[
a
l
,
a
l+1
,…,
a
r
]
. More formally, count the number of pairs of integers
(p,q)
such that
l≤p≤q≤r
and
a
p
≤
a
p+1
≤⋯≤
a
q−1
≤
a
q
.
Help Alice answer Bob's queries!
Input
The first line contains two integers
n
and
q
(
1≤n,q≤2⋅
10
5
) — the size of the array, and the number of queries, respectively.
The second line contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤
10
9
) — the elements of Alice's array.
The next
q
lines consist of three integers each. The first integer of the
i
-th line is
t
i
, the operation being performed on the
i
-th step (
t
i
=1
or
t
i
=2
).
If
t
i
=1
, the next two integers are
x
i
and
y
i
(
1≤
x
i
≤n
;
1≤
y
i
≤
10
9
), updating the element at position
x
i
to
y
i
(setting
a
x
i
=
y
i
).
If
t
i
=2
, the next two integers are
l
i
and
r
i
(
1≤
l
i
≤
r
i
≤n
), the two indices Bob asks Alice about for the
i
-th query.
It's guaranteed that there is at least one operation of the second type.
Output
For each query of type
2
, print a single integer, the answer to the query.
Example
input
Copy
5 6
3 1 4 1 5
2 2 5
2 1 3
1 4 4
2 2 5
1 2 6
2 2 5
output
Copy
6
4
10
7
Note
For the first query,
l=2
and
r=5
, and the non-decreasing subarrays
[p,q]
are
[2,2]
,
[3,3]
,
[4,4]
,
[5,5]
,
[2,3]
and
[4,5]
.