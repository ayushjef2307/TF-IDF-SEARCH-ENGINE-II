D. Co-growing Sequence
time limit per test2 seconds
memory limit per test512 megabytes
inputstandard input
outputstandard output
A sequence of non-negative integers
a
1
,
a
2
,…,
a
n
is called growing if for all
i
from
1
to
n−1
all ones (of binary representation) in
a
i
are in the places of ones (of binary representation) in
a
i+1
(in other words,
a
i
&
a
i+1
=
a
i
, where
&
denotes bitwise AND). If
n=1
then the sequence is considered growing as well.
For example, the following four sequences are growing:
[2,3,15,175]
— in binary it's
[
10
2
,
11
2
,
1111
2
,
10101111
2
]
;
[5]
— in binary it's
[
101
2
]
;
[1,3,7,15]
— in binary it's
[
1
2
,
11
2
,
111
2
,
1111
2
]
;
[0,0,0]
— in binary it's
[
0
2
,
0
2
,
0
2
]
.
The following three sequences are non-growing:
[3,4,5]
— in binary it's
[
11
2
,
100
2
,
101
2
]
;
[5,4,3]
— in binary it's
[
101
2
,
100
2
,
011
2
]
;
[1,2,4,8]
— in binary it's
[
0001
2
,
0010
2
,
0100
2
,
1000
2
]
.
Consider two sequences of non-negative integers
x
1
,
x
2
,…,
x
n
and
y
1
,
y
2
,…,
y
n
. Let's call this pair of sequences co-growing if the sequence
x
1
⊕
y
1
,
x
2
⊕
y
2
,…,
x
n
⊕
y
n
is growing where
⊕
denotes bitwise XOR.
You are given a sequence of integers
x
1
,
x
2
,…,
x
n
. Find the lexicographically minimal sequence
y
1
,
y
2
,…,
y
n
such that sequences
x
i
and
y
i
are co-growing.
The sequence
a
1
,
a
2
,…,
a
n
is lexicographically smaller than the sequence
b
1
,
b
2
,…,
b
n
if there exists
1≤k≤n
such that
a
i
=
b
i
for any
1≤i<k
but
a
k
<
b
k
.
Input
The first line contains an integer
t
(
1≤t≤
10
4
). Then
t
test cases follow.
The first line of each test case contains an integer
n
(
1≤n≤2⋅
10
5
) — length of the sequence
x
i
.
The second line contains
n
integers
x
1
,
x
2
,…,
x
n
(
0≤
x
i
<
2
30
) — elements of the sequence
x
i
.
It is guaranteed that the sum of
n
overall all test cases doesn't exceed
2⋅
10
5
.
Output
For each test case, print
n
integers
y
1
,
y
2
,…,
y
n
(
0≤
y
i
<
2
30
) — lexicographically minimal sequence such that such that it's co-growing with given sequence
x
i
.
Example
input
Copy
5
4
1 3 7 15
4
1 2 4 8
5
1 2 3 4 5
4
11 13 15 1
1
0
output
Copy
0 0 0 0 
0 1 3 7 
0 1 0 3 2 
0 2 0 14 
0 