D. Nastia Plays with a Tree
time limit per test3 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
Nastia has an unweighted tree with
n
vertices and wants to play with it!
The girl will perform the following operation with her tree, as long as she needs:
Remove any existing edge.
Add an edge between any pair of vertices.
What is the minimum number of operations Nastia needs to get a bamboo from a tree? A bamboo is a tree in which no node has a degree greater than
2
.
Input
The first line contains a single integer
t
(
1≤t≤10000
) — the number of test cases.
The first line of each test case contains a single integer
n
(
2≤n≤
10
5
) — the number of vertices in the tree.
Next
n−1
lines of each test cases describe the edges of the tree in form
a
i
,
b
i
(
1≤
a
i
,
b
i
≤n
,
a
i
≠
b
i
).
It's guaranteed the given graph is a tree and the sum of
n
in one test doesn't exceed
2⋅
10
5
.
Output
For each test case in the first line print a single integer
k
 — the minimum number of operations required to obtain a bamboo from the initial tree.
In the next
k
lines print
4
integers
x
1
,
y
1
,
x
2
,
y
2
(
1≤
x
1
,
y
1
,
x
2
,
y
2
≤n
,
x
1
≠
y
1
,
x
2
≠
y
2
) — this way you remove the edge
(
x
1
,
y
1
)
and add an undirected edge
(
x
2
,
y
2
)
.
Note that the edge
(
x
1
,
y
1
)
must be present in the graph at the moment of removing.
Example
input
Copy
2
7
1 2
1 3
2 4
2 5
3 6
3 7
4
1 2
1 3
3 4
output
Copy
2
2 5 6 7
3 6 4 5
0
Note
Note the graph can be unconnected after a certain operation.
Consider the first test case of the example:
The red edges are removed, and the green ones are added.