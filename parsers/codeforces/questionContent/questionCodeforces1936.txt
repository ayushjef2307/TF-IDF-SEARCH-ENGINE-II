E. Cheap Dinner
time limit per test4 seconds
memory limit per test512 megabytes
inputstandard input
outputstandard output
Ivan wants to have a good dinner. A good dinner should consist of a first course, a second course, a drink, and a dessert.
There are
n
1
different types of first courses Ivan can buy (the
i
-th of them costs
a
i
coins),
n
2
different types of second courses (the
i
-th of them costs
b
i
coins),
n
3
different types of drinks (the
i
-th of them costs
c
i
coins) and
n
4
different types of desserts (the
i
-th of them costs
d
i
coins).
Some dishes don't go well with each other. There are
m
1
pairs of first courses and second courses that don't go well with each other,
m
2
pairs of second courses and drinks, and
m
3
pairs of drinks and desserts that don't go well with each other.
Ivan wants to buy exactly one first course, one second course, one drink, and one dessert so that they go well with each other, and the total cost of the dinner is the minimum possible. Help him to find the cheapest dinner option!
Input
The first line contains four integers
n
1
,
n
2
,
n
3
and
n
4
(
1≤
n
i
≤150000
) — the number of types of first courses, second courses, drinks and desserts, respectively.
Then four lines follow. The first line contains
n
1
integers
a
1
,
a
2
,…,
a
n
1
(
1≤
a
i
≤
10
8
), where
a
i
is the cost of the
i
-th type of first course. Three next lines denote the costs of second courses, drinks, and desserts in the same way (
1≤
b
i
,
c
i
,
d
i
≤
10
8
).
The next line contains one integer
m
1
(
0≤
m
1
≤200000
) — the number of pairs of first and second courses that don't go well with each other. Each of the next
m
1
lines contains two integers
x
i
and
y
i
(
1≤
x
i
≤
n
1
;
1≤
y
i
≤
n
2
) denoting that the first course number
x
i
doesn't go well with the second course number
y
i
. All these pairs are different.
The block of pairs of second dishes and drinks that don't go well with each other is given in the same format. The same for pairs of drinks and desserts that don't go well with each other (
0≤
m
2
,
m
3
≤200000
).
Output
If it's impossible to choose a first course, a second course, a drink, and a dessert so that they go well with each other, print
−1
. Otherwise, print one integer — the minimum total cost of the dinner.
Examples
input
Copy
4 3 2 1
1 2 3 4
5 6 7
8 9
10
2
1 2
1 1
2
3 1
3 2
1
1 1
output
Copy
26
input
Copy
1 1 1 1
1
1
1
1
1
1 1
0
0
output
Copy
-1
Note
The best option in the first example is to take the first course
2
, the second course
1
, the drink
2
and the dessert
1
.
In the second example, the only pair of the first course and the second course is bad, so it's impossible to have dinner.