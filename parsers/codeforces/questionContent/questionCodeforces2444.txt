A. Common Prefixes
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
The length of the longest common prefix of two strings
s=
s
1
s
2
…
s
n
and
t=
t
1
t
2
…
t
m
is defined as the maximum integer
k
(
0≤k≤min(n,m)
) such that
s
1
s
2
…
s
k
equals
t
1
t
2
…
t
k
.
Koa the Koala initially has
n+1
strings
s
1
,
s
2
,…,
s
n+1
.
For each
i
(
1≤i≤n
) she calculated
a
i
 — the length of the longest common prefix of
s
i
and
s
i+1
.
Several days later Koa found these numbers, but she couldn't remember the strings.
So Koa would like to find some strings
s
1
,
s
2
,…,
s
n+1
which would have generated numbers
a
1
,
a
2
,…,
a
n
. Can you help her?
If there are many answers print any. We can show that answer always exists for the given constraints.
Input
Each test contains multiple test cases. The first line contains
t
(
1≤t≤100
) — the number of test cases. Description of the test cases follows.
The first line of each test case contains a single integer
n
(
1≤n≤100
) — the number of elements in the list
a
.
The second line of each test case contains
n
integers
a
1
,
a
2
,…,
a
n
(
0≤
a
i
≤50
) — the elements of
a
.
It is guaranteed that the sum of
n
over all test cases does not exceed
100
.
Output
For each test case:
Output
n+1
lines. In the
i
-th line print string
s
i
(
1≤|
s
i
|≤200
), consisting of lowercase Latin letters. Length of the longest common prefix of strings
s
i
and
s
i+1
has to be equal to
a
i
.
If there are many answers print any. We can show that answer always exists for the given constraints.
Example
input
Copy
4
4
1 2 4 2
2
5 3
3
1 3 1
3
0 0 0
output
Copy
aeren
ari
arousal
around
ari
monogon
monogamy
monthly
kevinvu
kuroni
kurioni
korone
anton
loves
adhoc
problems
Note
In the
1
-st test case one of the possible answers is
s=[aeren,ari,arousal,around,ari]
.
Lengths of longest common prefixes are:
Between
aeren
and
ari
→1
Between
ari
and
arousal
→2
Between
arousal
and
around
→4
Between
around
and
ari
→2