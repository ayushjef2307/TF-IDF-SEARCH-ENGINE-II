C. String Transformation 2
time limit per test3 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
Note that the only difference between String Transformation 1 and String Transformation 2 is in the move Koa does. In this version the letter
y
Koa selects can be any letter from the first
20
lowercase letters of English alphabet (read statement for better understanding). You can make hacks in these problems independently.
Koa the Koala has two strings
A
and
B
of the same length
n
(
|A|=|B|=n
) consisting of the first
20
lowercase English alphabet letters (ie. from a to t).
In one move Koa:
selects some subset of positions
p
1
,
p
2
,…,
p
k
(
k≥1;1≤
p
i
≤n;
p
i
≠
p
j
if
i≠j
) of
A
such that
A
p
1
=
A
p
2
=…=
A
p
k
=x
(ie. all letters on this positions are equal to some letter
x
).
selects any letter
y
(from the first
20
lowercase letters in English alphabet).
sets each letter in positions
p
1
,
p
2
,…,
p
k
to letter
y
. More formally: for each
i
(
1≤i≤k
) Koa sets
A
p
i
=y
.
Note that you can only modify letters in string
A
.
Koa wants to know the smallest number of moves she has to do to make strings equal to each other (
A=B
) or to determine that there is no way to make them equal. Help her!
Input
Each test contains multiple test cases. The first line contains
t
(
1≤t≤10
) — the number of test cases. Description of the test cases follows.
The first line of each test case contains one integer
n
(
1≤n≤
10
5
) — the length of strings
A
and
B
.
The second line of each test case contains string
A
(
|A|=n
).
The third line of each test case contains string
B
(
|B|=n
).
Both strings consists of the first
20
lowercase English alphabet letters (ie. from a to t).
It is guaranteed that the sum of
n
over all test cases does not exceed
10
5
.
Output
For each test case:
Print on a single line the smallest number of moves she has to do to make strings equal to each other (
A=B
) or
−1
if there is no way to make them equal.
Example
input
Copy
5
3
aab
bcc
4
cabc
abcb
3
abc
tsr
4
aabd
cccd
5
abcbd
bcdda
output
Copy
2
3
3
2
4
Note
In the
1
-st test case Koa:
selects positions
1
and
2
and sets
A
1
=
A
2
=
b (
aab→bbb
).
selects positions
2
and
3
and sets
A
2
=
A
3
=
c (
bbb→bcc
).
In the
2
-nd test case Koa:
selects positions
1
and
4
and sets
A
1
=
A
4
=
a (
cabc→aaba
).
selects positions
2
and
4
and sets
A
2
=
A
4
=
b (
aaba→abbb
).
selects position
3
and sets
A
3
=
c (
abbb→abcb
).
In the
3
-rd test case Koa:
selects position
1
and sets
A
1
=
t (
abc→tbc
).
selects position
2
and sets
A
2
=
s (
tbc→tsc
).
selects position
3
and sets
A
3
=
r (
tsc→tsr
).