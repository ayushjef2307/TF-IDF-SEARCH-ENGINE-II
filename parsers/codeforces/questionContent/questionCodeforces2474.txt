H. Set Merging
time limit per test4 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given a permutation
a
1
,
a
2
,…,
a
n
of numbers from
1
to
n
. Also, you have
n
sets
S
1
,
S
2
,…,
S
n
, where
S
i
={
a
i
}
. Lastly, you have a variable
cnt
, representing the current number of sets. Initially,
cnt=n
.
We define two kinds of functions on sets:
f(S)=
min
u∈S
u
;
g(S)=
max
u∈S
u
.
You can obtain a new set by merging two sets
A
and
B
, if they satisfy
g(A)<f(B)
(Notice that the old sets do not disappear).
Formally, you can perform the following sequence of operations:
cnt←cnt+1
;
S
cnt
=
S
u
∪
S
v
, you are free to choose
u
and
v
for which
1≤u,v<cnt
and which satisfy
g(
S
u
)<f(
S
v
)
.
You are required to obtain some specific sets.
There are
q
requirements, each of which contains two integers
l
i
,
r
i
, which means that there must exist a set
S
k
i
(
k
i
is the ID of the set, you should determine it) which equals
{
a
u
∣
l
i
≤u≤
r
i
}
, which is, the set consisting of all
a
i
with indices between
l
i
and
r
i
.
In the end you must ensure that
cnt≤2.2×
10
6
. Note that you don't have to minimize
cnt
. It is guaranteed that a solution under given constraints exists.
Input
The first line contains two integers
n,q
(1≤n≤
2
12
,1≤q≤
2
16
)
 — the length of the permutation and the number of needed sets correspondently.
The next line consists of
n
integers
a
1
,
a
2
,⋯,
a
n
(
1≤
a
i
≤n
,
a
i
are pairwise distinct)  — given permutation.
i
-th of the next
q
lines contains two integers
l
i
,
r
i
(1≤
l
i
≤
r
i
≤n)
, describing a requirement of the
i
-th set.
Output
It is guaranteed that a solution under given constraints exists.
The first line should contain one integer
cn
t
E
(n≤cn
t
E
≤2.2×
10
6
)
, representing the number of sets after all operations.
cn
t
E
−n
lines must follow, each line should contain two integers
u
,
v
(
1≤u,v≤cn
t
′
, where
cn
t
′
is the value of
cnt
before this operation), meaning that you choose
S
u
,
S
v
and perform a merging operation. In an operation,
g(
S
u
)<f(
S
v
)
must be satisfied.
The last line should contain
q
integers
k
1
,
k
2
,⋯,
k
q
(1≤
k
i
≤cn
t
E
)
, representing that set
S
k
i
is the
i
th required set.
Please notice the large amount of output.
Examples
input
Copy
3 2
1 3 2
2 3
1 3
output
Copy
6
3 2
1 3
5 2
4 6 
input
Copy
2 4
2 1
1 2
1 2
1 2
1 1
output
Copy
5
2 1
2 1
2 1
5 3 3 1
Note
In the first sample:
We have
S
1
={1},
S
2
={3},
S
3
={2}
initially.
In the first operation, because
g(
S
3
)=2<f(
S
2
)=3
, we can merge
S
3
,
S
2
into
S
4
={2,3}
.
In the second operation, because
g(
S
1
)=1<f(
S
3
)=2
, we can merge
S
1
,
S
3
into
S
5
={1,2}
.
In the third operation, because
g(
S
5
)=2<f(
S
2
)=3
, we can merge
S
5
,
S
2
into
S
6
={1,2,3}
.
For the first requirement,
S
4
={2,3}={
a
2
,
a
3
}
, satisfies it, thus
k
1
=4
.
For the second requirement,
S
6
={1,2,3}={
a
1
,
a
2
,
a
3
}
, satisfies it, thus
k
2
=6
Notice that unused sets, identical sets, outputting the same set multiple times, and using sets that are present initially are all allowed.