B. Neighbor Grid
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given a grid with
n
rows and
m
columns, where each cell has a non-negative integer written on it. We say the grid is good if for each cell the following condition holds: if it has a number
k>0
written on it, then exactly
k
of its neighboring cells have a number greater than
0
written on them. Note that if the number in the cell is
0
, there is no such restriction on neighboring cells.
You are allowed to take any number in the grid and increase it by
1
. You may apply this operation as many times as you want, to any numbers you want. Perform some operations (possibly zero) to make the grid good, or say that it is impossible. If there are multiple possible answers, you may find any of them.
Two cells are considered to be neighboring if they have a common edge.
Input
The input consists of multiple test cases. The first line contains an integer
t
(
1≤t≤5000
)  — the number of test cases. The description of the test cases follows.
The first line of each test case contains two integers
n
and
m
(
2≤n,m≤300
)  — the number of rows and columns, respectively.
The following
n
lines contain
m
integers each, the
j
-th element in the
i
-th line
a
i,j
is the number written in the
j
-th cell of the
i
-th row (
0≤
a
i,j
≤
10
9
).
It is guaranteed that the sum of
n⋅m
over all test cases does not exceed
10
5
.
Output
If it is impossible to obtain a good grid, print a single line containing "NO".
Otherwise, print a single line containing "YES", followed by
n
lines each containing
m
integers, which describe the final state of the grid. This final grid should be obtainable from the initial one by applying some operations (possibly zero).
If there are multiple possible answers, you may print any of them.
Example
input
Copy
5
3 4
0 0 0 0
0 1 0 0
0 0 0 0
2 2
3 0
0 0
2 2
0 0
0 0
2 3
0 0 0
0 4 0
4 4
0 0 0 0
0 2 0 1
0 0 0 0
0 0 0 0
output
Copy
YES
0 0 0 0
0 1 1 0
0 0 0 0
NO
YES
0 0
0 0
NO
YES
0 1 0 0
1 4 2 1
0 2 0 0
1 3 1 0
Note
In the first test case, we can obtain the resulting grid by increasing the number in row
2
, column
3
once. Both of the cells that contain
1
have exactly one neighbor that is greater than zero, so the grid is good. Many other solutions exist, such as the grid
0100
0
1
0
0
0210
0
2
1
0
0000
0
0
0
0
All of them are accepted as valid answers.
In the second test case, it is impossible to make the grid good.
In the third test case, notice that no cell has a number greater than zero on it, so the grid is automatically good.