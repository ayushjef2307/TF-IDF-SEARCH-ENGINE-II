B. Two Arrays And Swaps
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given two arrays
a
and
b
both consisting of
n
positive (greater than zero) integers. You are also given an integer
k
.
In one move, you can choose two indices
i
and
j
(
1≤i,j≤n
) and swap
a
i
and
b
j
(i.e.
a
i
becomes
b
j
and vice versa). Note that
i
and
j
can be equal or different (in particular, swap
a
2
with
b
2
or swap
a
3
and
b
9
both are acceptable moves).
Your task is to find the maximum possible sum you can obtain in the array
a
if you can do no more than (i.e. at most)
k
such moves (swaps).
You have to answer
t
independent test cases.
Input
The first line of the input contains one integer
t
(
1≤t≤200
) — the number of test cases. Then
t
test cases follow.
The first line of the test case contains two integers
n
and
k
(
1≤n≤30;0≤k≤n
) — the number of elements in
a
and
b
and the maximum number of moves you can do. The second line of the test case contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤30
), where
a
i
is the
i
-th element of
a
. The third line of the test case contains
n
integers
b
1
,
b
2
,…,
b
n
(
1≤
b
i
≤30
), where
b
i
is the
i
-th element of
b
.
Output
For each test case, print the answer — the maximum possible sum you can obtain in the array
a
if you can do no more than (i.e. at most)
k
swaps.
Example
input
Copy
5
2 1
1 2
3 4
5 5
5 5 6 6 5
1 2 5 4 3
5 3
1 2 3 4 5
10 9 10 10 9
4 0
2 2 4 3
2 4 2 3
4 4
1 2 2 1
4 4 5 4
output
Copy
6
27
39
11
17
Note
In the first test case of the example, you can swap
a
1
=1
and
b
2
=4
, so
a=[4,2]
and
b=[3,1]
.
In the second test case of the example, you don't need to swap anything.
In the third test case of the example, you can swap
a
1
=1
and
b
1
=10
,
a
3
=3
and
b
3
=10
and
a
2
=2
and
b
4
=10
, so
a=[10,10,10,4,5]
and
b=[1,9,3,2,9]
.
In the fourth test case of the example, you cannot swap anything.
In the fifth test case of the example, you can swap arrays
a
and
b
, so
a=[4,4,5,4]
and
b=[1,2,2,1]
.