F. Binary String Reconstruction
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
For some binary string
s
(i.e. each character
s
i
is either '0' or '1'), all pairs of consecutive (adjacent) characters were written. In other words, all substrings of length
2
were written. For each pair (substring of length
2
), the number of '1' (ones) in it was calculated.
You are given three numbers:
n
0
— the number of such pairs of consecutive characters (substrings) where the number of ones equals
0
;
n
1
— the number of such pairs of consecutive characters (substrings) where the number of ones equals
1
;
n
2
— the number of such pairs of consecutive characters (substrings) where the number of ones equals
2
.
For example, for the string
s=
"1110011110", the following substrings would be written: "11", "11", "10", "00", "01", "11", "11", "11", "10". Thus,
n
0
=1
,
n
1
=3
,
n
2
=5
.
Your task is to restore any suitable binary string
s
from the given values
n
0
,
n
1
,
n
2
. It is guaranteed that at least one of the numbers
n
0
,
n
1
,
n
2
is greater than
0
. Also, it is guaranteed that a solution exists.
Input
The first line contains an integer
t
(
1≤t≤1000
) — the number of test cases in the input. Then test cases follow.
Each test case consists of one line which contains three integers
n
0
,
n
1
,
n
2
(
0≤
n
0
,
n
1
,
n
2
≤100
;
n
0
+
n
1
+
n
2
>0
). It is guaranteed that the answer for given
n
0
,
n
1
,
n
2
exists.
Output
Print
t
lines. Each of the lines should contain a binary string corresponding to a test case. If there are several possible solutions, print any of them.
Example
input
Copy
7
1 3 5
1 1 1
3 9 3
0 1 0
3 1 2
0 0 3
2 0 0
output
Copy
1110011110
0011
0110001100101011
10
0000111
1111
000