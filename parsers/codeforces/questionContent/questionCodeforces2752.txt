B. Dreamoon Likes Permutations
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
The sequence of
m
integers is called the permutation if it contains all integers from
1
to
m
exactly once. The number
m
is called the length of the permutation.
Dreamoon has two permutations
p
1
and
p
2
of non-zero lengths
l
1
and
l
2
.
Now Dreamoon concatenates these two permutations into another sequence
a
of length
l
1
+
l
2
. First
l
1
elements of
a
is the permutation
p
1
and next
l
2
elements of
a
is the permutation
p
2
.
You are given the sequence
a
, and you need to find two permutations
p
1
and
p
2
. If there are several possible ways to restore them, you should find all of them. (Note that it is also possible that there will be no ways.)
Input
The first line contains an integer
t
(
1≤t≤10000
) denoting the number of test cases in the input.
Each test case contains two lines. The first line contains one integer
n
(
2≤n≤200000
): the length of
a
. The second line contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤n−1
).
The total sum of
n
is less than
200000
.
Output
For each test case, the first line of output should contain one integer
k
: the number of ways to divide
a
into permutations
p
1
and
p
2
.
Each of the next
k
lines should contain two integers
l
1
and
l
2
(
1≤
l
1
,
l
2
≤n,
l
1
+
l
2
=n
), denoting, that it is possible to divide
a
into two permutations of length
l
1
and
l
2
(
p
1
is the first
l
1
elements of
a
, and
p
2
is the last
l
2
elements of
a
). You can print solutions in any order.
Example
input
Copy
6
5
1 4 3 2 1
6
2 4 1 3 2 1
4
2 1 1 3
4
1 3 3 1
12
2 1 3 4 5 6 7 8 9 1 10 2
3
1 1 1
output
Copy
2
1 4
4 1
1
4 2
0
0
1
2 10
0
Note
In the first example, two possible ways to divide
a
into permutations are
{1}+{4,3,2,1}
and
{1,4,3,2}+{1}
.
In the second example, the only way to divide
a
into permutations is
{2,4,1,3}+{2,1}
.
In the third example, there are no possible ways.