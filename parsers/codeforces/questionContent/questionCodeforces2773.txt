F2. Wise Men (Hard Version)
time limit per test4 seconds
memory limit per test512 megabytes
inputstandard input
outputstandard output
This is the hard version of the problem. The difference is constraints on the number of wise men and the time limit. You can make hacks only if all versions of this task are solved.
n
wise men live in a beautiful city. Some of them know each other.
For each of the
n!
possible permutations
p
1
,
p
2
,…,
p
n
of the wise men, let's generate a binary string of length
n−1
: for each
1≤i<n
set
s
i
=1
if
p
i
and
p
i+1
know each other, and
s
i
=0
otherwise.
For all possible
2
n−1
binary strings, find the number of permutations that produce this binary string.
Input
The first line of input contains one integer
n
(
2≤n≤18)
 — the number of wise men in the city.
The next
n
lines contain a binary string of length
n
each, such that the
j
-th character of the
i
-th string is equal to '1' if wise man
i
knows wise man
j
, and equals '0' otherwise.
It is guaranteed that if the
i
-th man knows the
j
-th man, then the
j
-th man knows
i
-th man and no man knows himself.
Output
Print
2
n−1
space-separated integers. For each
0≤x<
2
n−1
:
Let's consider a string
s
of length
n−1
, such that
s
i
=⌊
x
2
i−1
⌋mod2
for all
1≤i≤n−1
.
The
(x+1)
-th number should be equal to the required answer for
s
.
Examples
input
Copy
3
011
101
110
output
Copy
0 0 0 6 
input
Copy
4
0101
1000
0001
1010
output
Copy
2 2 6 2 2 6 2 2 
Note
In the first test, each wise man knows each other, so every permutation will produce the string
11
.
In the second test:
If
p={1,2,3,4}
, the produced string is
101
, because wise men
1
and
2
know each other,
2
and
3
don't know each other, and
3
and
4
know each other;
If
p={4,1,2,3}
, the produced string is
110
, because wise men
1
and
4
know each other,
1
and
2
know each other and
2
, and
3
don't know each other;
If
p={1,3,2,4}
, the produced string is
000
, because wise men
1
and
3
don't know each other,
3
and
2
don't know each other, and
2
and
4
don't know each other.