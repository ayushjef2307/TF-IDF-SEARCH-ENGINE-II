F. Maximum White Subtree
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given a tree consisting of
n
vertices. A tree is a connected undirected graph with
n−1
edges. Each vertex
v
of this tree has a color assigned to it (
a
v
=1
if the vertex
v
is white and
0
if the vertex
v
is black).
You have to solve the following problem for each vertex
v
: what is the maximum difference between the number of white and the number of black vertices you can obtain if you choose some subtree of the given tree that contains the vertex
v
? The subtree of the tree is the connected subgraph of the given tree. More formally, if you choose the subtree that contains
cn
t
w
white vertices and
cn
t
b
black vertices, you have to maximize
cn
t
w
−cn
t
b
.
Input
The first line of the input contains one integer
n
(
2≤n≤2⋅
10
5
) — the number of vertices in the tree.
The second line of the input contains
n
integers
a
1
,
a
2
,…,
a
n
(
0≤
a
i
≤1
), where
a
i
is the color of the
i
-th vertex.
Each of the next
n−1
lines describes an edge of the tree. Edge
i
is denoted by two integers
u
i
and
v
i
, the labels of vertices it connects
(1≤
u
i
,
v
i
≤n,
u
i
≠
v
i
).
It is guaranteed that the given edges form a tree.
Output
Print
n
integers
re
s
1
,re
s
2
,…,re
s
n
, where
re
s
i
is the maximum possible difference between the number of white and black vertices in some subtree that contains the vertex
i
.
Examples
input
Copy
9
0 1 1 1 0 0 0 0 1
1 2
1 3
3 4
3 5
2 6
4 7
6 8
5 9
output
Copy
2 2 2 2 2 1 1 0 2 
input
Copy
4
0 0 1 0
1 2
1 3
1 4
output
Copy
0 -1 1 -1 
Note
The first example is shown below:
The black vertices have bold borders.
In the second example, the best subtree for vertices
2,3
and
4
are vertices
2,3
and
4
correspondingly. And the best subtree for the vertex
1
is the subtree consisting of vertices
1
and
3
.