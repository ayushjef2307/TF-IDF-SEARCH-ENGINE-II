B. Array Sharpening
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
You're given an array
a
1
,…,
a
n
of
n
non-negative integers.
Let's call it sharpened if and only if there exists an integer
1≤k≤n
such that
a
1
<
a
2
<…<
a
k
and
a
k
>
a
k+1
>…>
a
n
. In particular, any strictly increasing or strictly decreasing array is sharpened. For example:
The arrays
[4]
,
[0,1]
,
[12,10,8]
and
[3,11,15,9,7,4]
are sharpened;
The arrays
[2,8,2,8,6,5]
,
[0,1,1,0]
and
[2,5,6,9,8,8]
are not sharpened.
You can do the following operation as many times as you want: choose any strictly positive element of the array, and decrease it by one. Formally, you can choose any
i
(
1≤i≤n
) such that
a
i
>0
and assign
a
i
:=
a
i
−1
.
Tell if it's possible to make the given array sharpened using some number (possibly zero) of these operations.
Input
The input consists of multiple test cases. The first line contains a single integer
t
(
1≤t≤15 000
)  — the number of test cases. The description of the test cases follows.
The first line of each test case contains a single integer
n
(
1≤n≤3⋅
10
5
).
The second line of each test case contains a sequence of
n
non-negative integers
a
1
,…,
a
n
(
0≤
a
i
≤
10
9
).
It is guaranteed that the sum of
n
over all test cases does not exceed
3⋅
10
5
.
Output
For each test case, output a single line containing "Yes" (without quotes) if it's possible to make the given array sharpened using the described operations, or "No" (without quotes) otherwise.
Example
input
Copy
10
1
248618
3
12 10 8
6
100 11 15 9 7 8
4
0 1 1 0
2
0 0
2
0 1
2
1 0
2
1 1
3
0 1 0
3
1 0 1
output
Copy
Yes
Yes
Yes
No
No
Yes
Yes
Yes
Yes
No
Note
In the first and the second test case of the first test, the given array is already sharpened.
In the third test case of the first test, we can transform the array into
[3,11,15,9,7,4]
(decrease the first element
97
times and decrease the last element
4
times). It is sharpened because
3<11<15
and
15>9>7>4
.
In the fourth test case of the first test, it's impossible to make the given array sharpened.