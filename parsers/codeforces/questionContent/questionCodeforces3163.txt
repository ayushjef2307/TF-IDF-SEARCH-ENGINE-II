A. Good ol' Numbers Coloring
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
Consider the set of all nonnegative integers:
0,1,2,…
. Given two integers
a
and
b
(
1≤a,b≤
10
4
). We paint all the numbers in increasing number first we paint
0
, then we paint
1
, then
2
and so on.
Each number is painted white or black. We paint a number
i
according to the following rules:
if
i=0
, it is colored white;
if
i≥a
and
i−a
is colored white,
i
is also colored white;
if
i≥b
and
i−b
is colored white,
i
is also colored white;
if
i
is still not colored white, it is colored black.
In this way, each nonnegative integer gets one of two colors.
For example, if
a=3
,
b=5
, then the colors of the numbers (in the order from
0
) are: white (
0
), black (
1
), black (
2
), white (
3
), black (
4
), white (
5
), white (
6
), black (
7
), white (
8
), white (
9
), ...
Note that:
It is possible that there are infinitely many nonnegative integers colored black. For example, if
a=10
and
b=10
, then only
0,10,20,30
and any other nonnegative integers that end in
0
when written in base 10 are white. The other integers are colored black.
It is also possible that there are only finitely many nonnegative integers colored black. For example, when
a=1
and
b=10
, then there is no nonnegative integer colored black at all.
Your task is to determine whether or not the number of nonnegative integers colored black is infinite.
If there are infinitely many nonnegative integers colored black, simply print a line containing "Infinite" (without the quotes). Otherwise, print "Finite" (without the quotes).
Input
The first line of input contains a single integer
t
(
1≤t≤100
) — the number of test cases in the input. Then
t
lines follow, each line contains two space-separated integers
a
and
b
(
1≤a,b≤
10
4
).
Output
For each test case, print one line containing either "Infinite" or "Finite" (without the quotes). Output is case-insensitive (i.e. "infinite", "inFiNite" or "finiTE" are all valid answers).
Example
input
Copy
4
10 10
1 10
6 9
7 3
output
Copy
Infinite
Finite
Infinite
Finite