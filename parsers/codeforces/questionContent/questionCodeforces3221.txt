D. Complete Tripartite
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You have a simple undirected graph consisting of
n
vertices and
m
edges. The graph doesn't contain self-loops, there is at most one edge between a pair of vertices. The given graph can be disconnected.
Let's make a definition.
Let
v
1
and
v
2
be two some nonempty subsets of vertices that do not intersect. Let
f(
v
1
,
v
2
)
be true if and only if all the conditions are satisfied:
There are no edges with both endpoints in vertex set
v
1
.
There are no edges with both endpoints in vertex set
v
2
.
For every two vertices
x
and
y
such that
x
is in
v
1
and
y
is in
v
2
, there is an edge between
x
and
y
.
Create three vertex sets (
v
1
,
v
2
,
v
3
) which satisfy the conditions below;
All vertex sets should not be empty.
Each vertex should be assigned to only one vertex set.
f(
v
1
,
v
2
)
,
f(
v
2
,
v
3
)
,
f(
v
3
,
v
1
)
are all true.
Is it possible to create such three vertex sets? If it's possible, print matching vertex set for each vertex.
Input
The first line contains two integers
n
and
m
(
3≤n≤
10
5
,
0≤m≤min(3⋅
10
5
,
n(n−1)
2
)
) — the number of vertices and edges in the graph.
The
i
-th of the next
m
lines contains two integers
a
i
and
b
i
(
1≤
a
i
<
b
i
≤n
) — it means there is an edge between
a
i
and
b
i
. The graph doesn't contain self-loops, there is at most one edge between a pair of vertices. The given graph can be disconnected.
Output
If the answer exists, print
n
integers.
i
-th integer means the vertex set number (from
1
to
3
) of
i
-th vertex. Otherwise, print
−1
.
If there are multiple answers, print any.
Examples
input
Copy
6 11
1 2
1 3
1 4
1 5
1 6
2 4
2 5
2 6
3 4
3 5
3 6
output
Copy
1 2 2 3 3 3 
input
Copy
4 6
1 2
1 3
1 4
2 3
2 4
3 4
output
Copy
-1
Note
In the first example, if
v
1
={1}
,
v
2
={2,3}
, and
v
3
={4,5,6}
then vertex sets will satisfy all conditions. But you can assign vertices to vertex sets in a different way; Other answers like "2 3 3 1 1 1" will be accepted as well.
In the second example, it's impossible to make such vertex sets.