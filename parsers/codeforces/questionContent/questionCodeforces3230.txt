D1. Optimal Subsequences (Easy Version)
time limit per test3 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
This is the easier version of the problem. In this version
1≤n,m≤100
. You can hack this problem only if you solve and lock both problems.
You are given a sequence of integers
a=[
a
1
,
a
2
,…,
a
n
]
of length
n
. Its subsequence is obtained by removing zero or more elements from the sequence
a
(they do not necessarily go consecutively). For example, for the sequence
a=[11,20,11,33,11,20,11]
:
[11,20,11,33,11,20,11]
,
[11,20,11,33,11,20]
,
[11,11,11,11]
,
[20]
,
[33,20]
are subsequences (these are just some of the long list);
[40]
,
[33,33]
,
[33,20,20]
,
[20,20,11,11]
are not subsequences.
Suppose that an additional non-negative integer
k
(
1≤k≤n
) is given, then the subsequence is called optimal if:
it has a length of
k
and the sum of its elements is the maximum possible among all subsequences of length
k
;
and among all subsequences of length
k
that satisfy the previous item, it is lexicographically minimal.
Recall that the sequence
b=[
b
1
,
b
2
,…,
b
k
]
is lexicographically smaller than the sequence
c=[
c
1
,
c
2
,…,
c
k
]
if the first element (from the left) in which they differ less in the sequence
b
than in
c
. Formally: there exists
t
(
1≤t≤k
) such that
b
1
=
c
1
,
b
2
=
c
2
, ...,
b
t−1
=
c
t−1
and at the same time
b
t
<
c
t
. For example:
[10,20,20]
lexicographically less than
[10,21,1]
,
[7,99,99]
is lexicographically less than
[10,21,1]
,
[10,21,0]
is lexicographically less than
[10,21,1]
.
You are given a sequence of
a=[
a
1
,
a
2
,…,
a
n
]
and
m
requests, each consisting of two numbers
k
j
and
po
s
j
(
1≤k≤n
,
1≤po
s
j
≤
k
j
). For each query, print the value that is in the index
po
s
j
of the optimal subsequence of the given sequence
a
for
k=
k
j
.
For example, if
n=4
,
a=[10,20,30,20]
,
k
j
=2
, then the optimal subsequence is
[20,30]
— it is the minimum lexicographically among all subsequences of length
2
with the maximum total sum of items. Thus, the answer to the request
k
j
=2
,
po
s
j
=1
is the number
20
, and the answer to the request
k
j
=2
,
po
s
j
=2
is the number
30
.
Input
The first line contains an integer
n
(
1≤n≤100
) — the length of the sequence
a
.
The second line contains elements of the sequence
a
: integer numbers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤
10
9
).
The third line contains an integer
m
(
1≤m≤100
) — the number of requests.
The following
m
lines contain pairs of integers
k
j
and
po
s
j
(
1≤k≤n
,
1≤po
s
j
≤
k
j
) — the requests.
Output
Print
m
integers
r
1
,
r
2
,…,
r
m
(
1≤
r
j
≤
10
9
) one per line: answers to the requests in the order they appear in the input. The value of
r
j
should be equal to the value contained in the position
po
s
j
of the optimal subsequence for
k=
k
j
.
Examples
input
Copy
3
10 20 10
6
1 1
2 1
2 2
3 1
3 2
3 3
output
Copy
20
10
20
10
20
10
input
Copy
7
1 2 1 3 1 2 1
9
2 1
2 2
3 1
3 2
3 3
1 1
7 1
7 7
7 4
output
Copy
2
3
2
3
2
3
1
1
3
Note
In the first example, for
a=[10,20,10]
the optimal subsequences are:
for
k=1
:
[20]
,
for
k=2
:
[10,20]
,
for
k=3
:
[10,20,10]
.