G1. Into Blocks (easy version)
time limit per test5 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
This is an easier version of the next problem. In this version,
q=0
.
A sequence of integers is called nice if its elements are arranged in blocks like in
[3,3,3,4,1,1]
. Formally, if two elements are equal, everything in between must also be equal.
Let's define difficulty of a sequence as a minimum possible number of elements to change to get a nice sequence. However, if you change at least one element of value
x
to value
y
, you must also change all other elements of value
x
into
y
as well. For example, for
[3,3,1,3,2,1,2]
it isn't allowed to change first
1
to
3
and second
1
to
2
. You need to leave
1
's untouched or change them to the same value.
You are given a sequence of integers
a
1
,
a
2
,…,
a
n
and
q
updates.
Each update is of form "
i
x
" — change
a
i
to
x
. Updates are not independent (the change stays for the future).
Print the difficulty of the initial sequence and of the sequence after every update.
Input
The first line contains integers
n
and
q
(
1≤n≤200000
,
q=0
), the length of the sequence and the number of the updates.
The second line contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤200000
), the initial sequence.
Each of the following
q
lines contains integers
i
t
and
x
t
(
1≤
i
t
≤n
,
1≤
x
t
≤200000
), the position and the new value for this position.
Output
Print
q+1
integers, the answer for the initial sequence and the answer after every update.
Examples
input
Copy
5 0
3 7 3 7 3
output
Copy
2
input
Copy
10 0
1 2 1 2 3 1 1 1 50 1
output
Copy
4
input
Copy
6 0
6 6 3 3 4 4
output
Copy
0
input
Copy
7 0
3 3 1 3 2 1 2
output
Copy
4