D. Restore Permutation
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
An array of integers
p
1
,
p
2
,…,
p
n
is called a permutation if it contains each number from
1
to
n
exactly once. For example, the following arrays are permutations:
[3,1,2],[1],[1,2,3,4,5]
and
[4,3,1,2]
. The following arrays are not permutations:
[2],[1,1],[2,3,4]
.
There is a hidden permutation of length
n
.
For each index
i
, you are given
s
i
, which equals to the sum of all
p
j
such that
j<i
and
p
j
<
p
i
. In other words,
s
i
is the sum of elements before the
i
-th element that are smaller than the
i
-th element.
Your task is to restore the permutation.
Input
The first line contains a single integer
n
(
1≤n≤2⋅
10
5
) — the size of the permutation.
The second line contains
n
integers
s
1
,
s
2
,…,
s
n
(
0≤
s
i
≤
n(n−1)
2
).
It is guaranteed that the array
s
corresponds to a valid permutation of length
n
.
Output
Print
n
integers
p
1
,
p
2
,…,
p
n
— the elements of the restored permutation. We can show that the answer is always unique.
Examples
input
Copy
3
0 0 0
output
Copy
3 2 1
input
Copy
2
0 1
output
Copy
1 2
input
Copy
5
0 1 1 1 10
output
Copy
1 4 3 2 5
Note
In the first example for each
i
there is no index
j
satisfying both conditions, hence
s
i
are always
0
.
In the second example for
i=2
it happens that
j=1
satisfies the conditions, so
s
2
=
p
1
.
In the third example for
i=2,3,4
only
j=1
satisfies the conditions, so
s
2
=
s
3
=
s
4
=1
. For
i=5
all
j=1,2,3,4
are possible, so
s
5
=
p
1
+
p
2
+
p
3
+
p
4
=10
.