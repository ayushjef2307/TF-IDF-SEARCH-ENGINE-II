D. Extra Element
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
A sequence
a
1
,
a
2
,…,
a
k
is called an arithmetic progression if for each
i
from
1
to
k
elements satisfy the condition
a
i
=
a
1
+c⋅(i−1)
for some fixed
c
.
For example, these five sequences are arithmetic progressions:
[5,7,9,11]
,
[101]
,
[101,100,99]
,
[13,97]
and
[5,5,5,5,5]
. And these four sequences aren't arithmetic progressions:
[3,1,2]
,
[1,2,4,8]
,
[1,−1,1,−1]
and
[1,2,3,3,3]
.
You are given a sequence of integers
b
1
,
b
2
,…,
b
n
. Find any index
j
(
1≤j≤n
), such that if you delete
b
j
from the sequence, you can reorder the remaining
n−1
elements, so that you will get an arithmetic progression. If there is no such index, output the number -1.
Input
The first line of the input contains one integer
n
(
2≤n≤2⋅
10
5
) — length of the sequence
b
. The second line contains
n
integers
b
1
,
b
2
,…,
b
n
(
−
10
9
≤
b
i
≤
10
9
) — elements of the sequence
b
.
Output
Print such index
j
(
1≤j≤n
), so that if you delete the
j
-th element from the sequence, you can reorder the remaining elements, so that you will get an arithmetic progression. If there are multiple solutions, you are allowed to print any of them. If there is no such index, print -1.
Examples
input
Copy
5
2 6 8 7 4
output
Copy
4
input
Copy
8
1 2 3 4 5 6 7 8
output
Copy
1
input
Copy
4
1 2 4 8
output
Copy
-1
Note
Note to the first example. If you delete the
4
-th element, you can get the arithmetic progression
[2,4,6,8]
.
Note to the second example. The original sequence is already arithmetic progression, so you can delete
1
-st or last element and you will get an arithmetical progression again.