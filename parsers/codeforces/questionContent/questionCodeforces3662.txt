B. Born This Way
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
Arkady bought an air ticket from a city A to a city C. Unfortunately, there are no direct flights, but there are a lot of flights from A to a city B, and from B to C.
There are
n
flights from A to B, they depart at time moments
a
1
,
a
2
,
a
3
, ...,
a
n
and arrive at B
t
a
moments later.
There are
m
flights from B to C, they depart at time moments
b
1
,
b
2
,
b
3
, ...,
b
m
and arrive at C
t
b
moments later.
The connection time is negligible, so one can use the
i
-th flight from A to B and the
j
-th flight from B to C if and only if
b
j
≥
a
i
+
t
a
.
You can cancel at most
k
flights. If you cancel a flight, Arkady can not use it.
Arkady wants to be in C as early as possible, while you want him to be in C as late as possible. Find the earliest time Arkady can arrive at C, if you optimally cancel
k
flights. If you can cancel
k
or less flights in such a way that it is not possible to reach C at all, print
−1
.
Input
The first line contains five integers
n
,
m
,
t
a
,
t
b
and
k
(
1≤n,m≤2⋅
10
5
,
1≤k≤n+m
,
1≤
t
a
,
t
b
≤
10
9
) — the number of flights from A to B, the number of flights from B to C, the flight time from A to B, the flight time from B to C and the number of flights you can cancel, respectively.
The second line contains
n
distinct integers in increasing order
a
1
,
a
2
,
a
3
, ...,
a
n
(
1≤
a
1
<
a
2
<…<
a
n
≤
10
9
) — the times the flights from A to B depart.
The third line contains
m
distinct integers in increasing order
b
1
,
b
2
,
b
3
, ...,
b
m
(
1≤
b
1
<
b
2
<…<
b
m
≤
10
9
) — the times the flights from B to C depart.
Output
If you can cancel
k
or less flights in such a way that it is not possible to reach C at all, print
−1
.
Otherwise print the earliest time Arkady can arrive at C if you cancel
k
flights in such a way that maximizes this time.
Examples
input
Copy
4 5 1 1 2
1 3 5 7
1 2 3 9 10
output
Copy
11
input
Copy
2 2 4 4 2
1 10
10 20
output
Copy
-1
input
Copy
4 3 2 3 1
1 999999998 999999999 1000000000
3 4 1000000000
output
Copy
1000000003
Note
Consider the first example. The flights from A to B depart at time moments
1
,
3
,
5
, and
7
and arrive at B at time moments
2
,
4
,
6
,
8
, respectively. The flights from B to C depart at time moments
1
,
2
,
3
,
9
, and
10
and arrive at C at time moments
2
,
3
,
4
,
10
,
11
, respectively. You can cancel at most two flights. The optimal solution is to cancel the first flight from A to B and the fourth flight from B to C. This way Arkady has to take the second flight from A to B, arrive at B at time moment
4
, and take the last flight from B to C arriving at C at time moment
11
.
In the second example you can simply cancel all flights from A to B and you're done.
In the third example you can cancel only one flight, and the optimal solution is to cancel the first flight from A to B. Note that there is still just enough time to catch the last flight from B to C.