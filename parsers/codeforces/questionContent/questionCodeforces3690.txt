B. Parity Alternated Deletions
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
Polycarp has an array
a
consisting of
n
integers.
He wants to play a game with this array. The game consists of several moves. On the first move he chooses any element and deletes it (after the first move the array contains
n−1
elements). For each of the next moves he chooses any element with the only restriction: its parity should differ from the parity of the element deleted on the previous move. In other words, he alternates parities (even-odd-even-odd-... or odd-even-odd-even-...) of the removed elements. Polycarp stops if he can't make a move.
Formally:
If it is the first move, he chooses any element and deletes it;
If it is the second or any next move:
if the last deleted element was odd, Polycarp chooses any even element and deletes it;
if the last deleted element was even, Polycarp chooses any odd element and deletes it.
If after some move Polycarp cannot make a move, the game ends.
Polycarp's goal is to minimize the sum of non-deleted elements of the array after end of the game. If Polycarp can delete the whole array, then the sum of non-deleted elements is zero.
Help Polycarp find this value.
Input
The first line of the input contains one integer
n
(
1≤n≤2000
) — the number of elements of
a
.
The second line of the input contains
n
integers
a
1
,
a
2
,…,
a
n
(
0≤
a
i
≤
10
6
), where
a
i
is the
i
-th element of
a
.
Output
Print one integer — the minimum possible sum of non-deleted elements of the array after end of the game.
Examples
input
Copy
5
1 5 7 8 2
output
Copy
0
input
Copy
6
5 1 2 4 6 3
output
Copy
0
input
Copy
2
1000000 1000000
output
Copy
1000000