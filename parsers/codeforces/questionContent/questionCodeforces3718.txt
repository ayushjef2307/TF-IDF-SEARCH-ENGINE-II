C. Edgy Trees
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given a tree (a connected undirected graph without cycles) of
n
vertices. Each of the
n−1
edges of the tree is colored in either black or red.
You are also given an integer
k
. Consider sequences of
k
vertices. Let's call a sequence
[
a
1
,
a
2
,…,
a
k
]
good if it satisfies the following criterion:
We will walk a path (possibly visiting same edge/vertex multiple times) on the tree, starting from
a
1
and ending at
a
k
.
Start at
a
1
, then go to
a
2
using the shortest path between
a
1
and
a
2
, then go to
a
3
in a similar way, and so on, until you travel the shortest path between
a
k−1
and
a
k
.
If you walked over at least one black edge during this process, then the sequence is good.
Consider the tree on the picture. If
k=3
then the following sequences are good:
[1,4,7]
,
[5,5,3]
and
[2,3,7]
. The following sequences are not good:
[1,4,6]
,
[5,5,5]
,
[3,7,3]
.
There are
n
k
sequences of vertices, count how many of them are good. Since this number can be quite large, print it modulo
10
9
+7
.
Input
The first line contains two integers
n
and
k
(
2≤n≤
10
5
,
2≤k≤100
), the size of the tree and the length of the vertex sequence.
Each of the next
n−1
lines contains three integers
u
i
,
v
i
and
x
i
(
1≤
u
i
,
v
i
≤n
,
x
i
∈{0,1}
), where
u
i
and
v
i
denote the endpoints of the corresponding edge and
x
i
is the color of this edge (
0
denotes red edge and
1
denotes black edge).
Output
Print the number of good sequences modulo
10
9
+7
.
Examples
input
Copy
4 4
1 2 1
2 3 1
3 4 1
output
Copy
252
input
Copy
4 6
1 2 0
1 3 0
1 4 0
output
Copy
0
input
Copy
3 5
1 2 1
2 3 0
output
Copy
210
Note
In the first example, all sequences (
4
4
) of length
4
except the following are good:
[1,1,1,1]
[2,2,2,2]
[3,3,3,3]
[4,4,4,4]
In the second example, all edges are red, hence there aren't any good sequences.