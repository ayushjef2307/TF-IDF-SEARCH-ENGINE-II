B. Camp Schedule
time limit per test1 second
memory limit per test512 megabytes
inputstandard input
outputstandard output
The new camp by widely-known over the country Spring Programming Camp is going to start soon. Hence, all the team of friendly curators and teachers started composing the camp's schedule. After some continuous discussion, they came up with a schedule
s
, which can be represented as a binary string, in which the
i
-th symbol is '1' if students will write the contest in the
i
-th day and '0' if they will have a day off.
At the last moment Gleb said that the camp will be the most productive if it runs with the schedule
t
(which can be described in the same format as schedule
s
). Since the number of days in the current may be different from number of days in schedule
t
, Gleb required that the camp's schedule must be altered so that the number of occurrences of
t
in it as a substring is maximum possible. At the same time, the number of contest days and days off shouldn't change, only their order may change.
Could you rearrange the schedule in the best possible way?
Input
The first line contains string
s
(
1⩽|s|⩽500000
), denoting the current project of the camp's schedule.
The second line contains string
t
(
1⩽|t|⩽500000
), denoting the optimal schedule according to Gleb.
Strings
s
and
t
contain characters '0' and '1' only.
Output
In the only line print the schedule having the largest number of substrings equal to
t
. Printed schedule should consist of characters '0' and '1' only and the number of zeros should be equal to the number of zeros in
s
and the number of ones should be equal to the number of ones in
s
.
In case there multiple optimal schedules, print any of them.
Examples
input
Copy
101101
110
output
Copy
110110
input
Copy
10010110
100011
output
Copy
01100011
input
Copy
10
11100
output
Copy
01
Note
In the first example there are two occurrences, one starting from first position and one starting from fourth position.
In the second example there is only one occurrence, which starts from third position. Note, that the answer is not unique. For example, if we move the first day (which is a day off) to the last position, the number of occurrences of
t
wouldn't change.
In the third example it's impossible to make even a single occurrence.