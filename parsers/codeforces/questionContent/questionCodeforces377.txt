B. Koxia and Permutation
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
Reve has two integers
n
and
k
.
Let
p
be a permutation
†
†
of length
n
. Let
c
be an array of length
n−k+1
such that
c
i
=max(
p
i
,…,
p
i+k−1
)+min(
p
i
,…,
p
i+k−1
).
(
)
min
(
)
Let the cost of the permutation
p
be the maximum element of
c
.
Koxia wants you to construct a permutation with the minimum possible cost.
†
†
A permutation of length
n
is an array consisting of
n
distinct integers from
1
to
n
in arbitrary order. For example,
[2,3,1,5,4]
is a permutation, but
[1,2,2]
is not a permutation (
2
appears twice in the array), and
[1,3,4]
is also not a permutation (
n=3
but there is
4
in the array).
Input
Each test consists of multiple test cases. The first line contains a single integer
t
(
1≤t≤2000
) — the number of test cases. The description of test cases follows.
The first line of each test case contains two integers
n
and
k
(
1≤k≤n≤2⋅
10
5
).
It is guaranteed that the sum of
n
over all test cases does not exceed
2⋅
10
5
.
Output
For each test case, output
n
integers
p
1
,
p
2
,…,
p
n
, which is a permutation with minimal cost. If there is more than one permutation with minimal cost, you may output any of them.
Example
input
Copy
3
5 3
5 1
6 6
output
Copy
5 1 2 3 4
1 2 3 4 5
3 2 4 1 6 5
Note
In the first test case,
c
1
=max(
p
1
,
p
2
,
p
3
)+min(
p
1
,
p
2
,
p
3
)=5+1=6
.
c
2
=max(
p
2
,
p
3
,
p
4
)+min(
p
2
,
p
3
,
p
4
)=3+1=4
.
c
3
=max(
p
3
,
p
4
,
p
5
)+min(
p
3
,
p
4
,
p
5
)=4+2=6
.
Therefore, the cost is
max(6,4,6)=6
. It can be proven that this is the minimal cost.