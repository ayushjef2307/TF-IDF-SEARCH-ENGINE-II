G1. AND oracle
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
Implement a quantum oracle on
N
qubits which implements the following function:
f(
x
⃗ 
)=
x
0
∧
x
1
∧⋯∧
x
N−1
→
You have to implement an operation which takes the following inputs:
an array of
N
(
1≤N≤8
) qubits
x
in an arbitrary state (input register),
a qubit
y
in an arbitrary state (output qubit),
and performs a transformation
|x⟩|y⟩→|x⟩|y⊕f(x)⟩
. The operation doesn't have an output; its "output" is the state in which it leaves the qubits.
Your code should have the following signature:
namespace Solution {
    open Microsoft.Quantum.Primitive;
    open Microsoft.Quantum.Canon;

    operation Solve (x : Qubit[], y : Qubit) : Unit {
        body (...) {
            // your code here
        }
        adjoint auto;
    }
}