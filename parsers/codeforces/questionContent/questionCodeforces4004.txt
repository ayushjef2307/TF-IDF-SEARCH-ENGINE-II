E. Thematic Contests
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
Polycarp has prepared
n
competitive programming problems. The topic of the
i
-th problem is
a
i
, and some problems' topics may coincide.
Polycarp has to host several thematic contests. All problems in each contest should have the same topic, and all contests should have pairwise distinct topics. He may not use all the problems. It is possible that there are no contests for some topics.
Polycarp wants to host competitions on consecutive days, one contest per day. Polycarp wants to host a set of contests in such a way that:
number of problems in each contest is exactly twice as much as in the previous contest (one day ago), the first contest can contain arbitrary number of problems;
the total number of problems in all the contests should be maximized.
Your task is to calculate the maximum number of problems in the set of thematic contests. Note, that you should not maximize the number of contests.
Input
The first line of the input contains one integer
n
(
1≤n≤2⋅
10
5
) — the number of problems Polycarp has prepared.
The second line of the input contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤
10
9
) where
a
i
is the topic of the
i
-th problem.
Output
Print one integer — the maximum number of problems in the set of thematic contests.
Examples
input
Copy
18
2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10
output
Copy
14
input
Copy
10
6 6 6 3 6 1000000000 3 3 6 6
output
Copy
9
input
Copy
3
1337 1337 1337
output
Copy
3
Note
In the first example the optimal sequence of contests is:
2
problems of the topic
1
,
4
problems of the topic
2
,
8
problems of the topic
10
.
In the second example the optimal sequence of contests is:
3
problems of the topic
3
,
6
problems of the topic
6
.
In the third example you can take all the problems with the topic
1337
(the number of such problems is
3
so the answer is
3
) and host a single contest.