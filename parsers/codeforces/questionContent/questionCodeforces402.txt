C. Hamiltonian Wall
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
Sir Monocarp Hamilton is planning to paint his wall. The wall can be represented as a grid, consisting of
2
rows and
m
columns. Initially, the wall is completely white.
Monocarp wants to paint a black picture on the wall. In particular, he wants cell
(i,j)
(the
j
-th cell in the
i
-th row) to be colored black, if
c
i,j
=
'B', and to be left white, if
c
i,j
=
'W'. Additionally, he wants each column to have at least one black cell, so, for each
j
, the following constraint is satisfied:
c
1,j
,
c
2,j
or both of them will be equal to 'B'.
In order for the picture to turn out smooth, Monocarp wants to place down a paint brush in some cell
(
x
1
,
y
1
)
and move it along the path
(
x
1
,
y
1
),(
x
2
,
y
2
),…,(
x
k
,
y
k
)
so that:
for each
i
,
(
x
i
,
y
i
)
and
(
x
i+1
,
y
i+1
)
share a common side;
all black cells appear in the path exactly once;
white cells don't appear in the path.
Determine if Monocarp can paint the wall.
Input
The first line contains a single integer
t
(
1≤t≤
10
4
) — the number of testcases.
The first line of each testcase contains a single integer
m
(
1≤m≤2⋅
10
5
) — the number of columns in the wall.
The
i
-th of the next two lines contains a string
c
i
, consisting of
m
characters, where each character is either 'B' or 'W'.
c
i,j
is 'B', if the cell
(i,j)
should be colored black, and 'W', if the cell
(i,j)
should be left white.
Additionally, for each
j
, the following constraint is satisfied:
c
1,j
,
c
2,j
or both of them are equal to 'B'.
The sum of
m
over all testcases doesn't exceed
2⋅
10
5
.
Output
For each testcase, print "YES" if Monocarp can paint a wall. Otherwise, print "NO".
Example
input
Copy
6
3
WBB
BBW
1
B
B
5
BWBWB
BBBBB
2
BW
WB
5
BBBBW
BWBBB
6
BWBBWB
BBBBBB
output
Copy
YES
YES
NO
NO
NO
YES
Note
In the first testcase, Monocarp can follow a path
(2,1)
,
(2,2)
,
(1,2)
,
(1,3)
with his brush. All black cells appear in the path exactly once, no white cells appear in the path.
In the second testcase, Monocarp can follow a path
(1,1)
,
(2,1)
.
In the third testcase:
the path
(1,1)
,
(2,1)
,
(2,2)
,
(2,3)
,
(1,3)
,
(2,4)
,
(2,5)
,
(1,5)
doesn't suffice because a pair of cells
(1,3)
and
(2,4)
doesn't share a common side;
the path
(1,1)
,
(2,1)
,
(2,2)
,
(2,3)
,
(1,3)
,
(2,3)
,
(2,4)
,
(2,5)
,
(1,5)
doesn't suffice because cell
(2,3)
is visited twice;
the path
(1,1)
,
(2,1)
,
(2,2)
,
(2,3)
,
(2,4)
,
(2,5)
,
(1,5)
doesn't suffice because a black cell
(1,3)
doesn't appear in the path;
the path
(1,1)
,
(2,1)
,
(2,2)
,
(2,3)
,
(2,4)
,
(2,5)
,
(1,5)
,
(1,4)
,
(1,3)
doesn't suffice because a white cell
(1,4)
appears in the path.