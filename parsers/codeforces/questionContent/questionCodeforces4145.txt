C. Optimal Polygon Perimeter
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given
n
points on the plane. The polygon formed from all the
n
points is strictly convex, that is, the polygon is convex, and there are no three collinear points (i.e. lying in the same straight line). The points are numbered from
1
to
n
, in clockwise order.
We define the distance between two points
p
1
=(
x
1
,
y
1
)
and
p
2
=(
x
2
,
y
2
)
as their Manhattan distance:
d(
p
1
,
p
2
)=|
x
1
−
x
2
|+|
y
1
−
y
2
|.
d
(
)
|
|
|
|
Furthermore, we define the perimeter of a polygon, as the sum of Manhattan distances between all adjacent pairs of points on it; if the points on the polygon are ordered as
p
1
,
p
2
,…,
p
k
(k≥3)
, then the perimeter of the polygon is
d(
p
1
,
p
2
)+d(
p
2
,
p
3
)+…+d(
p
k
,
p
1
)
.
For some parameter
k
, let's consider all the polygons that can be formed from the given set of points, having any
k
vertices, such that the polygon is not self-intersecting. For each such polygon, let's consider its perimeter. Over all such perimeters, we define
f(k)
to be the maximal perimeter.
Please note, when checking whether a polygon is self-intersecting, that the edges of a polygon are still drawn as straight lines. For instance, in the following pictures:
In the middle polygon, the order of points (
p
1
,
p
3
,
p
2
,
p
4
) is not valid, since it is a self-intersecting polygon. The right polygon (whose edges resemble the Manhattan distance) has the same order and is not self-intersecting, but we consider edges as straight lines. The correct way to draw this polygon is (
p
1
,
p
2
,
p
3
,
p
4
), which is the left polygon.
Your task is to compute
f(3),f(4),…,f(n)
. In other words, find the maximum possible perimeter for each possible number of points (i.e.
3
to
n
).
Input
The first line contains a single integer
n
(
3≤n≤3⋅
10
5
) — the number of points.
Each of the next
n
lines contains two integers
x
i
and
y
i
(
−
10
8
≤
x
i
,
y
i
≤
10
8
) — the coordinates of point
p
i
.
The set of points is guaranteed to be convex, all points are distinct, the points are ordered in clockwise order, and there will be no three collinear points.
Output
For each
i
(
3≤i≤n
), output
f(i)
.
Examples
input
Copy
4
2 4
4 3
3 0
1 3
output
Copy
12 14 
input
Copy
3
0 0
0 2
2 0
output
Copy
8 
Note
In the first example, for
f(3)
, we consider four possible polygons:
(
p
1
,
p
2
,
p
3
), with perimeter
12
.
(
p
1
,
p
2
,
p
4
), with perimeter
8
.
(
p
1
,
p
3
,
p
4
), with perimeter
12
.
(
p
2
,
p
3
,
p
4
), with perimeter
12
.
For
f(4)
, there is only one option, taking all the given points. Its perimeter
14
.
In the second example, there is only one possible polygon. Its perimeter is
8
.