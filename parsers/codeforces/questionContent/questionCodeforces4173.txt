A. Timetable
time limit per test2 seconds
memory limit per test512 megabytes
inputstandard input
outputstandard output
There are two bus stops denoted A and B, and there
n
buses that go from A to B every day. The shortest path from A to B takes
t
units of time but some buses might take longer paths. Moreover, buses are allowed to overtake each other during the route.
At each station one can find a sorted list of moments of time when a bus is at this station. We denote this list as
a
1
<
a
2
<…<
a
n
for stop A and as
b
1
<
b
2
<…<
b
n
for stop B. The buses always depart from A and arrive to B according to the timetable, but the order in which the buses arrive may differ. Let's call an order of arrivals valid if each bus arrives at least
t
units of time later than departs.
It is known that for an order to be valid the latest possible arrival for the bus that departs at
a
i
is
b
x
i
, i.e.
x
i
-th in the timetable. In other words, for each
i
there exists such a valid order of arrivals that the bus departed
i
-th arrives
x
i
-th (and all other buses can arrive arbitrary), but there is no valid order of arrivals in which the
i
-th departed bus arrives
(
x
i
+1)
-th.
Formally, let's call a permutation
p
1
,
p
2
,…,
p
n
valid, if
b
p
i
≥
a
i
+t
for all
i
. Then
x
i
is the maximum value of
p
i
among all valid permutations.
You are given the sequences
a
1
,
a
2
,…,
a
n
and
x
1
,
x
2
,…,
x
n
, but not the arrival timetable. Find out any suitable timetable for stop B
b
1
,
b
2
,…,
b
n
or determine that there is no such timetable.
Input
The first line of the input contains two integers
n
and
t
(
1≤n≤200000
,
1≤t≤
10
18
) — the number of buses in timetable for and the minimum possible travel time from stop A to stop B.
The second line contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
1
<
a
2
<…<
a
n
≤
10
18
), defining the moments of time when the buses leave stop A.
The third line contains
n
integers
x
1
,
x
2
,…,
x
n
(
1≤
x
i
≤n
), the
i
-th of them stands for the maximum possible timetable position, at which the
i
-th bus leaving stop A can arrive at stop B.
Output
If a solution exists, print "Yes" (without quotes) in the first line of the output.
In the second line print
n
integers
b
1
,
b
2
,…,
b
n
(
1≤
b
1
<
b
2
<…<
b
n
≤3⋅
10
18
). We can show that if there exists any solution, there exists a solution that satisfies such constraints on
b
i
. If there are multiple valid answers you can print any of them.
If there is no valid timetable, print "No" (without quotes) in the only line of the output.
Examples
input
Copy
3 10
4 6 8
2 2 3
output
Copy
Yes
16 17 21 
input
Copy
2 1
1 2
2 1
output
Copy
No
Note
Consider the first example and the timetable
b
1
,
b
2
,…,
b
n
from the output.
To get
x
1
=2
the buses can arrive in the order
(2,1,3)
. To get
x
2
=2
and
x
3
=3
the buses can arrive in the order
(1,2,3)
.
x
1
is not
3
, because the permutations
(3,1,2)
and
(3,2,1)
(all in which the
1
-st bus arrives
3
-rd) are not valid (sube buses arrive too early),
x
2
is not
3
because of similar reasons.