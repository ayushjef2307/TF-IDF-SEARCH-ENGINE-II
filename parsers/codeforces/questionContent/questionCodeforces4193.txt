B. Diagonal Walking v.2
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
Mikhail walks on a Cartesian plane. He starts at the point
(0,0)
, and in one move he can go to any of eight adjacent points. For example, if Mikhail is currently at the point
(0,0)
, he can go to any of the following points in one move:
(1,0)
;
(1,1)
;
(0,1)
;
(−1,1)
;
(−1,0)
;
(−1,−1)
;
(0,−1)
;
(1,−1)
.
If Mikhail goes from the point
(x1,y1)
to the point
(x2,y2)
in one move, and
x1≠x2
and
y1≠y2
, then such a move is called a diagonal move.
Mikhail has
q
queries. For the
i
-th query Mikhail's target is to go to the point
(
n
i
,
m
i
)
from the point
(0,0)
in exactly
k
i
moves. Among all possible movements he want to choose one with the maximum number of diagonal moves. Your task is to find the maximum number of diagonal moves or find that it is impossible to go from the point
(0,0)
to the point
(
n
i
,
m
i
)
in
k
i
moves.
Note that Mikhail can visit any point any number of times (even the destination point!).
Input
The first line of the input contains one integer
q
(
1≤q≤
10
4
) — the number of queries.
Then
q
lines follow. The
i
-th of these
q
lines contains three integers
n
i
,
m
i
and
k
i
(
1≤
n
i
,
m
i
,
k
i
≤
10
18
) —
x
-coordinate of the destination point of the query,
y
-coordinate of the destination point of the query and the number of moves in the query, correspondingly.
Output
Print
q
integers. The
i
-th integer should be equal to -1 if Mikhail cannot go from the point
(0,0)
to the point
(
n
i
,
m
i
)
in exactly
k
i
moves described above. Otherwise the
i
-th integer should be equal to the the maximum number of diagonal moves among all possible movements.
Example
input
Copy
3
2 2 3
4 3 7
10 1 9
output
Copy
1
6
-1
Note
One of the possible answers to the first test case:
(0,0)→(1,0)→(1,1)→(2,2)
.
One of the possible answers to the second test case:
(0,0)→(0,1)→(1,2)→(0,3)→(1,4)→(2,3)→(3,2)→(4,3)
.
In the third test case Mikhail cannot reach the point
(10,1)
in 9 moves.