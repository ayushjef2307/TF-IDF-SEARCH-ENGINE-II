H. Make Square
time limit per test7 seconds
memory limit per test1024 megabytes
inputstandard input
outputstandard output
We call an array
b
1
,
b
2
,…,
b
m
good, if there exist two indices
i<j
such that
b
i
⋅
b
j
is a perfect square.
Given an array
b
1
,
b
2
,…,
b
m
, in one action you can perform one of the following:
multiply any element
b
i
by any prime
p
;
divide any element
b
i
by prime
p
, if
b
i
is divisible by
p
.
Let
f(
b
1
,
b
2
,…,
b
m
)
be the minimum number of actions needed to make the array
b
good.
You are given an array of
n
integers
a
1
,
a
2
,…,
a
n
and
q
queries of the form
l
i
,
r
i
. For each query output
f(
a
l
i
,
a
l
i
+1
,…,
a
r
i
)
.
Input
The first line contains two integers
n
and
q
(
2≤n≤194598
,
1≤q≤1049658
) — the length of the array and the number of queries.
The second line contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤5032107
) — the elements of the array.
Each of the next
q
lines contains two integers
l
i
and
r
i
(
1≤
l
i
<
r
i
≤n
) — the parameters of a query.
Output
Output
q
lines — the answers for each query in the order they are given in the input.
Example
input
Copy
10 10
34 37 28 16 44 36 43 50 22 13
1 3
4 8
6 10
9 10
3 10
8 9
5 6
1 4
1 7
2 6
output
Copy
2
0
1
3
0
1
1
1
0
0
Note
In the first query of the first sample you can multiply second number by 7 to get 259 and multiply the third one by 37 to get 1036. Then
a
2
⋅
a
3
=268324=
518
2
.
In the second query subarray is already good because
a
4
⋅
a
6
=
24
2
.
In the third query you can divide 50 by 2 to get 25. Then
a
6
⋅
a
8
=
30
2
.