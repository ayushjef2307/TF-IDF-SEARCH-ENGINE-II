E. Cycle sort
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given an array of
n
positive integers
a
1
,
a
2
,…,
a
n
. You can perform the following operation any number of times: select several distinct indices
i
1
,
i
2
,…,
i
k
(
1≤
i
j
≤n
) and move the number standing at the position
i
1
to the position
i
2
, the number at the position
i
2
to the position
i
3
, ..., the number at the position
i
k
to the position
i
1
. In other words, the operation cyclically shifts elements:
i
1
→
i
2
→…
i
k
→
i
1
.
For example, if you have
n=4
, an array
a
1
=10,
a
2
=20,
a
3
=30,
a
4
=40
, and you choose three indices
i
1
=2
,
i
2
=1
,
i
3
=4
, then the resulting array would become
a
1
=20,
a
2
=40,
a
3
=30,
a
4
=10
.
Your goal is to make the array sorted in non-decreasing order with the minimum number of operations. The additional constraint is that the sum of cycle lengths over all operations should be less than or equal to a number
s
. If it's impossible to sort the array while satisfying that constraint, your solution should report that as well.
Input
The first line of the input contains two integers
n
and
s
(
1≤n≤200000
,
0≤s≤200000
)—the number of elements in the array and the upper bound on the sum of cycle lengths.
The next line contains
n
integers
a
1
,
a
2
,…,
a
n
—elements of the array (
1≤
a
i
≤
10
9
).
Output
If it's impossible to sort the array using cycles of total length not exceeding
s
, print a single number "-1" (quotes for clarity).
Otherwise, print a single number
q
— the minimum number of operations required to sort the array.
On the next
2⋅q
lines print descriptions of operations in the order they are applied to the array. The description of
i
-th operation begins with a single line containing one integer
k
(
1≤k≤n
)—the length of the cycle (that is, the number of selected indices). The next line should contain
k
distinct integers
i
1
,
i
2
,…,
i
k
(
1≤
i
j
≤n
)—the indices of the cycle.
The sum of lengths of these cycles should be less than or equal to
s
, and the array should be sorted after applying these
q
operations.
If there are several possible answers with the optimal
q
, print any of them.
Examples
input
Copy
5 5
3 2 3 1 1
output
Copy
1
5
1 4 2 3 5 
input
Copy
4 3
2 1 4 3
output
Copy
-1
input
Copy
2 0
2 2
output
Copy
0
Note
In the first example, it's also possible to sort the array with two operations of total length 5: first apply the cycle
1→4→1
(of length 2), then apply the cycle
2→3→5→2
(of length 3). However, it would be wrong answer as you're asked to use the minimal possible number of operations, which is 1 in that case.
In the second example, it's possible to the sort the array with two cycles of total length 4 (
1→2→1
and
3→4→3
). However, it's impossible to achieve the same using shorter cycles, which is required by
s=3
.
In the third example, the array is already sorted, so no operations are needed. Total length of empty set of cycles is considered to be zero.