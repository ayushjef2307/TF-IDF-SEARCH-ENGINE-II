F. Abbreviation
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given a text consisting of
n
space-separated words. There is exactly one space character between any pair of adjacent words. There are no spaces before the first word and no spaces after the last word. The length of text is the number of letters and spaces in it.
w
i
is the
i
-th word of text. All words consist only of lowercase Latin letters.
Let's denote a segment of words
w[i..j]
as a sequence of words
w
i
,
w
i+1
,…,
w
j
. Two segments of words
w[
i
1
..
j
1
]
and
w[
i
2
..
j
2
]
are considered equal if
j
1
−
i
1
=
j
2
−
i
2
,
j
1
≥
i
1
,
j
2
≥
i
2
, and for every
t∈[0,
j
1
−
i
1
]
w
i
1
+t
=
w
i
2
+t
. For example, for the text "to be or not to be" the segments
w[1..2]
and
w[5..6]
are equal, they correspond to the words "to be".
An abbreviation is a replacement of some segments of words with their first uppercase letters. In order to perform an abbreviation, you have to choose at least two non-intersecting equal segments of words, and replace each chosen segment with the string consisting of first letters of the words in the segment (written in uppercase). For example, for the text "a ab a a b ab a a b c" you can replace segments of words
w[2..4]
and
w[6..8]
with an abbreviation "AAA" and obtain the text "a AAA b AAA b c", or you can replace segments of words
w[2..5]
and
w[6..9]
with an abbreviation "AAAB" and obtain the text "a AAAB AAAB c".
What is the minimum length of the text after at most one abbreviation?
Input
The first line of the input contains one integer
n
(
1≤n≤300
) — the number of words in the text.
The next line contains
n
space-separated words of the text
w
1
,
w
2
,…,
w
n
. Each word consists only of lowercase Latin letters.
It is guaranteed that the length of text does not exceed
10
5
.
Output
Print one integer — the minimum length of the text after at most one abbreviation.
Examples
input
Copy
6
to be or not to be
output
Copy
12
input
Copy
10
a ab a a b ab a a b c
output
Copy
13
input
Copy
6
aa bb aa aa bb bb
output
Copy
11
Note
In the first example you can obtain the text "TB or not TB".
In the second example you can obtain the text "a AAAB AAAB c".
In the third example you can obtain the text "AB aa AB bb".