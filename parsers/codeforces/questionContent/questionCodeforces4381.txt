B. Reversing Encryption
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
A string
s
of length
n
can be encrypted by the following algorithm:
iterate over all divisors of
n
in decreasing order (i.e. from
n
to
1
),
for each divisor
d
, reverse the substring
s[1…d]
(i.e. the substring which starts at position
1
and ends at position
d
).
For example, the above algorithm applied to the string
s
="codeforces" leads to the following changes: "codeforces"
→
"secrofedoc"
→
"orcesfedoc"
→
"rocesfedoc"
→
"rocesfedoc" (obviously, the last reverse operation doesn't change the string because
d=1
).
You are given the encrypted string
t
. Your task is to decrypt this string, i.e., to find a string
s
such that the above algorithm results in string
t
. It can be proven that this string
s
always exists and is unique.
Input
The first line of input consists of a single integer
n
(
1≤n≤100
) — the length of the string
t
. The second line of input consists of the string
t
. The length of
t
is
n
, and it consists only of lowercase Latin letters.
Output
Print a string
s
such that the above algorithm results in
t
.
Examples
input
Copy
10
rocesfedoc
output
Copy
codeforces
input
Copy
16
plmaetwoxesisiht
output
Copy
thisisexampletwo
input
Copy
1
z
output
Copy
z
Note
The first example is described in the problem statement.