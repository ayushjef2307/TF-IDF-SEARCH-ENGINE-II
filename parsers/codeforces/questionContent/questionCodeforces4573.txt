H. Path Counting
time limit per test5 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given a rooted tree. Let's denote d(x) as depth of node x: depth of the root is 1, depth of any other node x is d(y) + 1, where y is a parent of x.
The tree has the following property: every node x with d(x) = i has exactly ai children. Maximum possible depth of a node is n, and an = 0.
We define fk as the number of unordered pairs of vertices in the tree such that the number of edges on the simple path between them is equal to k.
Calculate fk modulo 109 + 7 for every 1 ≤ k ≤ 2n - 2.
Input
The first line of input contains an integer n (2  ≤  n  ≤  5 000) — the maximum depth of a node.
The second line of input contains n - 1 integers a1,  a2,  ...,  an - 1 (2 ≤  ai  ≤ 109), where ai is the number of children of every node x such that d(x) = i. Since an = 0, it is not given in the input.
Output
Print 2n - 2 numbers. The k-th of these numbers must be equal to fk modulo 109 + 7.
Examples
input
Copy
4
2 2 2
output
Copy
14 19 20 20 16 16 
input
Copy
3
2 3
output
Copy
8 13 6 9 
Note
This the tree from the first sample: