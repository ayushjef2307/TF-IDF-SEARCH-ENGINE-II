D. Paths on the Tree
time limit per test3 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given a rooted tree consisting of
n
vertices. The vertices are numbered from
1
to
n
, and the root is the vertex
1
. You are also given a score array
s
1
,
s
2
,…,
s
n
.
A multiset of
k
simple paths is called valid if the following two conditions are both true.
Each path starts from
1
.
Let
c
i
be the number of paths covering vertex
i
. For each pair of vertices
(u,v)
(
2≤u,v≤n
) that have the same parent,
|
c
u
−
c
v
|≤1
holds.
The value of the path multiset is defined as
∑
i=1
n
c
i
s
i
.
It can be shown that it is always possible to find at least one valid multiset. Find the maximum value among all valid multisets.
Input
Each test contains multiple test cases. The first line contains a single integer
t
(
1≤t≤
10
4
) — the number of test cases. The description of the test cases follows.
The first line of each test case contains two space-separated integers
n
(
2≤n≤2⋅
10
5
) and
k
(
1≤k≤
10
9
) — the size of the tree and the required number of paths.
The second line contains
n−1
space-separated integers
p
2
,
p
3
,…,
p
n
(
1≤
p
i
≤n
), where
p
i
is the parent of the
i
-th vertex. It is guaranteed that this value describe a valid tree with root
1
.
The third line contains
n
space-separated integers
s
1
,
s
2
,…,
s
n
(
0≤
s
i
≤
10
4
) — the scores of the vertices.
It is guaranteed that the sum of
n
over all test cases does not exceed
2⋅
10
5
.
Output
For each test case, print a single integer — the maximum value of a path multiset.
Example
input
Copy
2
5 4
1 2 1 3
6 2 1 5 7
5 3
1 2 1 3
6 6 1 4 10
output
Copy
54
56
Note
In the first test case, one of optimal solutions is four paths
1→2→3→5
,
1→2→3→5
,
1→4
,
1→4
, here
c=[4,2,2,2,2]
. The value equals to
4⋅6+2⋅2+2⋅1+2⋅5+2⋅7=54
.
In the second test case, one of optimal solution is three paths
1→2→3→5
,
1→2→3→5
,
1→4
, here
c=[3,2,2,1,2]
. The value equals to
3⋅6+2⋅6+2⋅1+1⋅4+2⋅10=56
.