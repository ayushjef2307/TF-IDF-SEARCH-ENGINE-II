G. Tree Queries
time limit per test3 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given a tree consisting of n vertices (numbered from 1 to n). Initially all vertices are white. You have to process q queries of two different types:
1 x — change the color of vertex x to black. It is guaranteed that the first query will be of this type.
2 x — for the vertex x, find the minimum index y such that the vertex with index y belongs to the simple path from x to some black vertex (a simple path never visits any vertex more than once).
For each query of type 2 print the answer to it.
Note that the queries are given in modified way.
Input
The first line contains two numbers n and q (3 ≤ n, q ≤ 106).
Then n - 1 lines follow, each line containing two numbers xi and yi (1 ≤ xi < yi ≤ n) and representing the edge between vertices xi and yi.
It is guaranteed that these edges form a tree.
Then q lines follow. Each line contains two integers ti and zi, where ti is the type of ith query, and zi can be used to restore xi for this query in this way: you have to keep track of the answer to the last query of type 2 (let's call this answer last, and initially last = 0); then xi = (zi + last) mod n + 1.
It is guaranteed that the first query is of type 1, and there is at least one query of type 2.
Output
For each query of type 2 output the answer to it.
Example
input
Copy
4 6
1 2
2 3
3 4
1 2
1 2
2 2
1 3
2 2
2 2
output
Copy
3
2
1