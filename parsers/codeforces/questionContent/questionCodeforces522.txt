D. Problem with Random Tests
time limit per test4 seconds
memory limit per test512 megabytes
inputstandard input
outputstandard output
You are given a string
s
consisting of
n
characters. Each character of
s
is either 0 or 1.
A substring of
s
is a contiguous subsequence of its characters.
You have to choose two substrings of
s
(possibly intersecting, possibly the same, possibly non-intersecting — just any two substrings). After choosing them, you calculate the value of the chosen pair of substrings as follows:
let
s
1
be the first substring,
s
2
be the second chosen substring, and
f(
s
i
)
be the integer such that
s
i
is its binary representation (for example, if
s
i
is 11010,
f(
s
i
)=26
);
the value is the bitwise OR of
f(
s
1
)
and
f(
s
2
)
.
Calculate the maximum possible value you can get, and print it in binary representation without leading zeroes.
Input
The first line contains one integer
n
— the number of characters in
s
.
The second line contains
s
itself, consisting of exactly
n
characters 0 and/or 1.
All non-example tests in this problem are generated randomly: every character of
s
is chosen independently of other characters; for each character, the probability of it being 1 is exactly
1
2
.
This problem has exactly
40
tests. Tests from
1
to
3
are the examples; tests from
4
to
40
are generated randomly. In tests from
4
to
10
,
n=5
; in tests from
11
to
20
,
n=1000
; in tests from
21
to
40
,
n=
10
6
.
Hacks are forbidden in this problem.
Output
Print the maximum possible value you can get in binary representation without leading zeroes.
Examples
input
Copy
5
11010
output
Copy
11111
input
Copy
7
1110010
output
Copy
1111110
input
Copy
4
0000
output
Copy
0
Note
In the first example, you can choose the substrings 11010 and 101.
f(
s
1
)=26
,
f(
s
2
)=5
, their bitwise OR is
31
, and the binary representation of
31
is 11111.
In the second example, you can choose the substrings 1110010 and 11100.