C. Even Subarrays
time limit per test2.5 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given an integer array
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤n
).
Find the number of subarrays of
a
whose
XOR
has an even number of divisors. In other words, find all pairs of indices
(i,j)
(
i≤j
) such that
a
i
⊕
a
i+1
⊕⋯⊕
a
j
has an even number of divisors.
For example, numbers
2
,
3
,
5
or
6
have an even number of divisors, while
1
and
4
 — odd. Consider that
0
has an odd number of divisors in this task.
Here
XOR
(or
⊕
) denotes the bitwise XOR operation.
Print the number of subarrays but multiplied by 2022... Okay, let's stop. Just print the actual answer.
Input
Each test contains multiple test cases. The first line contains the number of test cases
t
(
1≤t≤
10
4
). Description of the test cases follows.
The first line of each test case contains a single integer
n
(
2≤n≤2⋅
10
5
) — the length of the array
a
.
The second line contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤n
).
It is guaranteed that the sum of
n
over all test cases does not exceed
2⋅
10
5
.
Output
For each test case, print the number of subarrays, whose
XOR
has an even number of divisors.
Example
input
Copy
4
3
3 1 2
5
4 2 1 5 3
4
4 4 4 4
7
5 7 3 7 1 7 3
output
Copy
4
11
0
20
Note
In the first test case, there are
4
subarrays whose
XOR
has an even number of divisors:
[3]
,
[3,1]
,
[1,2]
,
[2]
.
In the second test case, there are
11
subarrays whose
XOR
has an even number of divisors:
[4,2]
,
[4,2,1]
,
[4,2,1,5]
,
[2]
,
[2,1]
,
[2,1,5]
,
[2,1,5,3]
,
[1,5,3]
,
[5]
,
[5,3]
,
[3]
.
In the third test case, there is no subarray whose
XOR
has an even number of divisors since
XOR
of any subarray is either
4
or
0
.