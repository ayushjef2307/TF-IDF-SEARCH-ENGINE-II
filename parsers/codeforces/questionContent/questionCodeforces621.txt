F. Fishermen
time limit per test6 seconds
memory limit per test512 megabytes
inputstandard input
outputstandard output
There are
n
fishermen who have just returned from a fishing trip. The
i
-th fisherman has caught a fish of size
a
i
.
The fishermen will choose some order in which they are going to tell the size of the fish they caught (the order is just a permutation of size
n
). However, they are not entirely honest, and they may "increase" the size of the fish they have caught.
Formally, suppose the chosen order of the fishermen is
[
p
1
,
p
2
,
p
3
,…,
p
n
]
. Let
b
i
be the value which the
i
-th fisherman in the order will tell to the other fishermen. The values
b
i
are chosen as follows:
the first fisherman in the order just honestly tells the actual size of the fish he has caught, so
b
1
=
a
p
1
;
every other fisherman wants to tell a value that is strictly greater than the value told by the previous fisherman, and is divisible by the size of the fish that the fisherman has caught. So, for
i>1
,
b
i
is the smallest integer that is both strictly greater than
b
i−1
and divisible by
a
p
i
.
For example, let
n=7
,
a=[1,8,2,3,2,2,3]
. If the chosen order is
p=[1,6,7,5,3,2,4]
, then:
b
1
=
a
p
1
=1
;
b
2
is the smallest integer divisible by
2
and greater than
1
, which is
2
;
b
3
is the smallest integer divisible by
3
and greater than
2
, which is
3
;
b
4
is the smallest integer divisible by
2
and greater than
3
, which is
4
;
b
5
is the smallest integer divisible by
2
and greater than
4
, which is
6
;
b
6
is the smallest integer divisible by
8
and greater than
6
, which is
8
;
b
7
is the smallest integer divisible by
3
and greater than
8
, which is
9
.
You have to choose the order of fishermen in a way that yields the minimum possible
∑
i=1
n
b
i
.
Input
The first line contains one integer
n
(
1≤n≤1000
) — the number of fishermen.
The second line contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤
10
6
).
Output
Print one integer — the minimum possible value of
∑
i=1
n
b
i
you can obtain by choosing the order of fishermen optimally.
Examples
input
Copy
7
1 8 2 3 2 2 3
output
Copy
33
input
Copy
10
5 6 5 6 5 6 5 6 5 6
output
Copy
165