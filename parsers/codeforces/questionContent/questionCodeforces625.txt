B. Best Permutation
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
Let's define the value of the permutation
p
of
n
integers
1
,
2
, ...,
n
(a permutation is an array where each element from
1
to
n
occurs exactly once) as follows:
initially, an integer variable
x
is equal to
0
;
if
x<
p
1
, then add
p
1
to
x
(set
x=x+
p
1
), otherwise assign
0
to
x
;
if
x<
p
2
, then add
p
2
to
x
(set
x=x+
p
2
), otherwise assign
0
to
x
;
...
if
x<
p
n
, then add
p
n
to
x
(set
x=x+
p
n
), otherwise assign
0
to
x
;
the value of the permutation is
x
at the end of this process.
For example, for
p=[4,5,1,2,3,6]
, the value of
x
changes as follows:
0,4,9,0,2,5,11
, so the value of the permutation is
11
.
You are given an integer
n
. Find a permutation
p
of size
n
with the maximum possible value among all permutations of size
n
. If there are several such permutations, you can print any of them.
Input
The first line contains one integer
t
(
1≤t≤97
) — the number of test cases.
The only line of each test case contains one integer
n
(
4≤n≤100
).
Output
For each test case, print
n
integers — the permutation
p
of size
n
with the maximum possible value among all permutations of size
n
.
Example
input
Copy
3
4
5
6
output
Copy
2 1 3 4
1 2 3 4 5
4 5 1 2 3 6