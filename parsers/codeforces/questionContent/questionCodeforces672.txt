D. Permutation for Burenka
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
We call an array
a
pure if all elements in it are pairwise distinct. For example, an array
[1,7,9]
is pure,
[1,3,3,7]
isn't, because
3
occurs twice in it.
A pure array
b
is similar to a pure array
c
if their lengths
n
are the same and for all pairs of indices
l
,
r
, such that
1≤l≤r≤n
, it's true that
argmax([
b
l
,
b
l+1
,…,
b
r
])=argmax([
c
l
,
c
l+1
,…,
c
r
]),
(
[
b
b
b
]
)
(
[
]
)
where
argmax(x)
is defined as the index of the largest element in
x
(which is unique for pure arrays). For example,
argmax([3,4,2])=2
,
argmax([1337,179,57])=1
.
Recently, Tonya found out that Burenka really likes a permutation
p
of length
n
. Tonya decided to please her and give her an array
a
similar to
p
. He already fixed some elements of
a
, but exactly
k
elements are missing (in these positions temporarily
a
i
=0
). It is guaranteed that
k≥2
. Also, he has a set
S
of
k−1
numbers.
Tonya realized that he was missing one number to fill the empty places of
a
, so he decided to buy it. He has
q
options to buy. Tonya thinks that the number
d
suits him, if it is possible to replace all zeros in
a
with numbers from
S
and the number
d
, so that
a
becomes a pure array similar to
p
. For each option of
d
, output whether this number is suitable for him or not.
Input
The first line contains a single integer
t
(
1≤t≤
10
4
) is the number of test cases. The description of the test cases follows.
The first line of each test case contains a couple of integers
n
and
q
(
1≤n,q≤3⋅
10
5
).
The second line of each input test case contains
n
integers
p
1
,
p
2
,…,
p
n
(
1≤
p
i
≤n
) — the permutation Burenka likes.
The third line of each test case contains
n
integers
a
1
,
a
2
,…,
a
n
(
0≤
a
i
≤
10
6
) — elements of Tonya's array, where
0
denotes a missing element. It is guaranteed that there are two indexes
i,j
(1≤i,j≤n,i≠j)
such that
a
i
=0,
a
j
=0
, which implies that
k≥2
.
The fourth line of each test case contains
k−1
distinct integers
s
1
,
s
2
,…,
s
k−1
(
1≤
s
i
≤
10
6
) — elements of Tonya's set
S
.
Each of the next
q
lines contains a single integer
d
(
1≤d≤
10
6
) — the number that Tonya plans to buy.
It is guaranteed that for each given
d
it's possible to fill in the gaps in
a
with numbers from
S
and the number
d
to get a pure array.
It is guaranteed that the sum of
n
and the sum of
q
in all tests does not exceed
3⋅
10
5
.
Output
Output
q
lines. For each value
d
, print "YES" if there is a way to fill the array
a
to make it similar to
p
, and "NO" otherwise.
Example
input
Copy
4
4 3
1 4 3 2
5 0 7 0
6
9
1
4
5 3
1 2 5 4 3
0 5 10 0 0
3 9
1
8
11
5 2
1 4 3 2 5
0 0 0 0 0
7 9 1 5
6
100
4 2
4 1 3 2
0 5 3 0
2
4
6
output
Copy
YES
NO
NO
YES
YES
NO
YES
YES
NO
NO
Note
In the first test case for
d=9
, you can get
a=[5,9,7,6]
, it can be proved that
a
is similar to
p
, for
d=1
and
d=4
it can be proved that there is no answer.
In the second test case for
d=1
, you can get
a=[1,5,10,9,3]
, for
d=8
, you can get
a=[3,5,10,9,8]
, it can be proved that for
d=11
there is no answer.