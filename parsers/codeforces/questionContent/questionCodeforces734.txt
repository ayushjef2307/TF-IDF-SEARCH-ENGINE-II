B. Difference Array
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given an array
a
consisting of
n
non-negative integers. It is guaranteed that
a
is sorted from small to large.
For each operation, we generate a new array
b
i
=
a
i+1
−
a
i
for
1≤i<n
. Then we sort
b
from small to large, replace
a
with
b
, and decrease
n
by
1
.
After performing
n−1
operations,
n
becomes
1
. You need to output the only integer in array
a
(that is to say, you need to output
a
1
).
Input
The input consists of multiple test cases. The first line contains a single integer
t
(
1≤t≤
10
4
) — the number of test cases. The description of the test cases follows.
The first line of each test case contains one integer
n
(
2≤n≤
10
5
) — the length of the array
a
.
The second line contains
n
integers
a
1
,
a
2
,…,
a
n
(
0≤
a
1
≤…≤
a
n
≤5⋅
10
5
) — the array
a
.
It is guaranteed that the sum of
n
over all test cases does not exceed
2.5⋅
10
5
, and the sum of
a
n
over all test cases does not exceed
5⋅
10
5
.
Output
For each test case, output the answer on a new line.
Example
input
Copy
5
3
1 10 100
4
4 8 9 13
5
0 0 0 8 13
6
2 4 8 16 32 64
7
0 0 0 0 0 0 0
output
Copy
81
3
1
2
0
Note
To simplify the notes, let
sort(a)
denote the array you get by sorting
a
from small to large.
In the first test case,
a=[1,10,100]
at first. After the first operation,
a=sort([10−1,100−10])=[9,90]
. After the second operation,
a=sort([90−9])=[81]
.
In the second test case,
a=[4,8,9,13]
at first. After the first operation,
a=sort([8−4,9−8,13−9])=[1,4,4]
. After the second operation,
a=sort([4−1,4−4])=[0,3]
. After the last operation,
a=sort([3−0])=[3]
.