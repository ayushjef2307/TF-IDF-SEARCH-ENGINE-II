B. Fake Plastic Trees
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
We are given a rooted tree consisting of
n
vertices numbered from
1
to
n
. The root of the tree is the vertex
1
and the parent of the vertex
v
is
p
v
.
There is a number written on each vertex, initially all numbers are equal to
0
. Let's denote the number written on the vertex
v
as
a
v
.
For each
v
, we want
a
v
to be between
l
v
and
r
v
(
l
v
≤
a
v
≤
r
v
)
.
In a single operation we do the following:
Choose some vertex
v
. Let
b
1
,
b
2
,…,
b
k
be vertices on the path from the vertex
1
to vertex
v
(meaning
b
1
=1
,
b
k
=v
and
b
i
=
p
b
i+1
).
Choose a non-decreasing array
c
of length
k
of nonnegative integers:
0≤
c
1
≤
c
2
≤…≤
c
k
.
For each
i
(1≤i≤k)
, increase
a
b
i
by
c
i
.
What's the minimum number of operations needed to achieve our goal?
Input
The first line contains an integer
t
(1≤t≤1000)
 — the number of test cases. The description of the test cases follows.
The first line of each test case contains a single integer
n
(2≤n≤2⋅
10
5
)
 — the number of the vertices in the tree.
The second line of each test case contains
n−1
integers,
p
2
,
p
3
,…,
p
n
(1≤
p
i
<i)
, where
p
i
denotes the parent of the vertex
i
.
The
i
-th of the following
n
lines contains two integers
l
i
and
r
i
(1≤
l
i
≤
r
i
≤
10
9
)
.
It is guaranteed that the sum of
n
over all test cases doesn't exceed
2⋅
10
5
.
Output
For each test case output the minimum number of operations needed.
Example
input
Copy
4
2
1
1 5
2 9
3
1 1
4 5
2 4
6 10
4
1 2 1
6 9
5 6
4 5
2 4
5
1 2 3 4
5 5
4 4
3 3
2 2
1 1
output
Copy
1
2
2
5
Note
In the first test case, we can achieve the goal with a single operation: choose
v=2
and
c=[1,2]
, resulting in
a
1
=1,
a
2
=2
.
In the second test case, we can achieve the goal with two operations: first, choose
v=2
and
c=[3,3]
, resulting in
a
1
=3,
a
2
=3,
a
3
=0
. Then, choose
v=3,c=[2,7]
, resulting in
a
1
=5,
a
2
=3,
a
3
=7
.