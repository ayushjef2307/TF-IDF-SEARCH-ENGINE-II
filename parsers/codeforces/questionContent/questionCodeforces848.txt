B. Mystic Permutation
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
Monocarp is a little boy who lives in Byteland and he loves programming.
Recently, he found a permutation of length
n
. He has to come up with a mystic permutation. It has to be a new permutation such that it differs from the old one in each position.
More formally, if the old permutation is
p
1
,
p
2
,…,
p
n
and the new one is
q
1
,
q
2
,…,
q
n
it must hold that
p
1
≠
q
1
,
p
2
≠
q
2
,…,
p
n
≠
q
n
.
≠
≠
≠
Monocarp is afraid of lexicographically large permutations. Can you please help him to find the lexicographically minimal mystic permutation?
Input
There are several test cases in the input data. The first line contains a single integer
t
(
1≤t≤200
) — the number of test cases. This is followed by the test cases description.
The first line of each test case contains a positive integer
n
(
1≤n≤1000
) — the length of the permutation.
The second line of each test case contains
n
distinct positive integers
p
1
,
p
2
,…,
p
n
(
1≤
p
i
≤n
). It's guaranteed that
p
is a permutation, i. e.
p
i
≠
p
j
for all
i≠j
.
It is guaranteed that the sum of
n
does not exceed
1000
over all test cases.
Output
For each test case, output
n
positive integers — the lexicographically minimal mystic permutations. If such a permutation does not exist, output
−1
instead.
Example
input
Copy
4
3
1 2 3
5
2 3 4 5 1
4
2 3 1 4
1
1
output
Copy
2 3 1
1 2 3 4 5
1 2 4 3
-1
Note
In the first test case possible permutations that are mystic are
[2,3,1]
and
[3,1,2]
. Lexicographically smaller of the two is
[2,3,1]
.
In the second test case,
[1,2,3,4,5]
is the lexicographically minimal permutation and it is also mystic.
In third test case possible mystic permutations are
[1,2,4,3]
,
[1,4,2,3]
,
[1,4,3,2]
,
[3,1,4,2]
,
[3,2,4,1]
,
[3,4,2,1]
,
[4,1,2,3]
,
[4,1,3,2]
and
[4,3,2,1]
. The smallest one is
[1,2,4,3]
.