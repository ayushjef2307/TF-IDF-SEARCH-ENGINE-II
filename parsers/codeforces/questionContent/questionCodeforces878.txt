C. LIS or Reverse LIS?
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given an array
a
of
n
positive integers.
Let
LIS(a)
denote the length of longest strictly increasing subsequence of
a
. For example,
LIS([2,
1
_
,1,
3
_
])
=
2
.
LIS([
3
_
,
5
_
,
10
_
,
20
_
])
=
4
.
LIS([3,
1
_
,
2
_
,
4
_
])
=
3
.
We define array
a′
as the array obtained after reversing the array
a
i.e.
a′=[an,an−1,…,a1]
.
The beauty of array
a
is defined as
min(LIS(a),LIS(a′))
.
Your task is to determine the maximum possible beauty of the array
a
if you can rearrange the array
a
arbitrarily.
Input
The input consists of multiple test cases. The first line contains a single integer
t
(1≤t≤104)
 — the number of test cases. Description of the test cases follows.
The first line of each test case contains a single integer
n
(1≤n≤2⋅105)
 — the length of array
a
.
The second line of each test case contains
n
integers
a1,a2,…,an
(1≤ai≤109)
 — the elements of the array
a
.
It is guaranteed that the sum of
n
over all test cases does not exceed
2⋅105
.
Output
For each test case, output a single integer  — the maximum possible beauty of
a
after rearranging its elements arbitrarily.
Example
input
Copy
3
3
6 6 6
6
2 5 4 5 2 4
4
1 3 2 2
output
Copy
1
3
2
Note
In the first test case,
a
=
[6,6,6]
and
a′
=
[6,6,6]
.
LIS(a)=LIS(a′)
=
1
. Hence the beauty is
min(1,1)=1
.
In the second test case,
a
can be rearranged to
[2,5,4,5,4,2]
. Then
a′
=
[2,4,5,4,5,2]
.
LIS(a)=LIS(a′)=3
. Hence the beauty is
3
and it can be shown that this is the maximum possible beauty.
In the third test case,
a
can be rearranged to
[1,2,3,2]
. Then
a′
=
[2,3,2,1]
.
LIS(a)=3
,
LIS(a′)=2
. Hence the beauty is
min(3,2)=2
and it can be shown that
2
is the maximum possible beauty.