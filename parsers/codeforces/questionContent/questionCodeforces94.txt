A. Ian and Array Sorting
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
To thank Ian, Mary gifted an array
a
of length
n
to Ian. To make himself look smart, he wants to make the array in non-decreasing order by doing the following finitely many times: he chooses two adjacent elements
a
i
and
a
i+1
(
1≤i≤n−1
), and increases both of them by
1
or decreases both of them by
1
. Note that, the elements of the array can become negative.
As a smart person, you notice that, there are some arrays such that Ian cannot make it become non-decreasing order! Therefore, you decide to write a program to determine if it is possible to make the array in non-decreasing order.
Input
The first line contains a single integer
t
(
1≤t≤
10
4
) — the number of test cases. The description of test cases follows.
The first line of each test case consists of a single integer
n
(
2≤n≤3⋅
10
5
) — the number of elements in the array.
The second line of each test case contains
n
integers
a
1
,
a
2
,…,
a
n
(
1≤
a
i
≤
10
9
) — the elements of the array
a
.
It is guaranteed that the sum of
n
over all test cases does not exceed
3⋅
10
5
.
Output
For each test case, output "YES" if there exists a sequence of operations which make the array non-decreasing, else output "NO".
You may print each letter in any case (for example, "YES", "Yes", "yes", "yEs" will all be recognized as positive answer).
Example
input
Copy
5
3
1 3 2
2
2 1
4
1 3 5 7
4
2 1 4 3
5
5 4 3 2 1
output
Copy
YES
NO
YES
NO
YES
Note
For the first test case, we can increase
a
2
and
a
3
both by
1
. The array is now
[1,4,3]
.
Then we can decrease
a
1
and
a
2
both by
1
. The array is now
[0,3,3]
, which is sorted in non-decreasing order. So the answer is "YES".
For the second test case, no matter how Ian perform the operations,
a
1
will always be larger than
a
2
. So the answer is "NO" and Ian cannot pretend to be smart.
For the third test case, the array is already in non-decreasing order, so Ian does not need to do anything.