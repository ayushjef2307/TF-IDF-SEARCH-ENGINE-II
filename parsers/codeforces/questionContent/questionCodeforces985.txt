E. MinimizOR
time limit per test3 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given an array
a
of
n
non-negative integers, numbered from
1
to
n
.
Let's define the cost of the array
a
as
min
i≠j
a
i
|
a
j
, where
|
denotes the bitwise OR operation.
There are
q
queries. For each query you are given two integers
l
and
r
(
l<r
). For each query you should find the cost of the subarray
a
l
,
a
l+1
,…,
a
r
.
Input
Each test case consists of several test cases. The first line contains a single integer
t
(
1≤t≤
10
4
) — the number of test cases.
The first line of each test case contains an integer
n
(
2≤n≤
10
5
) — the length array
a
.
The second line of each test case contains
n
integers
a
1
,
a
2
,…,
a
n
(
0≤
a
i
<
2
30
) — the elements of
a
.
The third line of each test case contains an integer
q
(
1≤q≤
10
5
) — the number of queries.
Each of the next
q
lines contains two integers
l
j
,
r
j
(
1≤
l
j
<
r
j
≤n
) — the description of the
j
-th query.
It is guaranteed that the sum of
n
and the sum of
q
over all test cases do not exceed
10
5
.
Output
For each test case print
q
numbers, where the
j
-th number is the cost of array
a
l
j
,
a
l
j
+1
,…,
a
r
j
.
Example
input
Copy
2
5
6 1 3 2 1
4
1 2
2 3
2 4
2 5
4
0 2 1 1073741823
4
1 2
2 3
1 3
3 4
output
Copy
7
3
3
1
2
3
1
1073741823
Note
In the first test case the array
a
is
110
2
,
001
2
,
011
2
,
010
2
,
001
2
.
That's why the answers for the queries are:
[1;2]
:
a
1
|
a
2
=
110
2
|
001
2
=
111
2
=7
;
[2;3]
:
a
2
|
a
3
=
001
2
|
011
2
=
011
2
=3
;
[2;4]
:
a
2
|
a
3
=
a
3
|
a
4
=
a
2
|
a
4
=
011
2
=3
;
[2;5]
:
a
2
|
a
5
=
001
2
=1
.
In the second test case the array
a
is
00
2
,
10
2
,
01
2
,
11…
1
2









30
(
a
4
=
2
30
−1
).
That's why the answers for the queries are:
[1;2]
:
a
1
|
a
2
=
10
2
=2
;
[2;3]
:
a
2
|
a
3
=
11
2
=3
;
[1;3]
:
a
1
|
a
3
=
01
2
=1
;
[3;4]
:
a
3
|
a
4
=
01
2
|
11…
1
2









30
=
2
30
−1=1073741823
.